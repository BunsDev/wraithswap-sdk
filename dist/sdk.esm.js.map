{"version":3,"file":"sdk.esm.js","sources":["../src/enums/ChainId.ts","../src/enums/Rounding.ts","../src/enums/TradeType.ts","../src/enums/KashiAction.ts","../src/enums/Fee.ts","../src/enums/OrderStatus.ts","../src/constants/addresses.ts","../src/constants/kashi.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Movr.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/constants/index.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePoolInitCodeHash.ts","../src/functions/computeConstantProductPoolAddress.ts","../src/functions/sqrt.ts","../src/entities/ConstantProductPool.ts","../src/functions/computePairAddress.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../node_modules/regenerator-runtime/runtime.js","../src/types/MultiRouterTypes.ts","../src/types/LimitOrderTypes.ts","../src/entities/eip712.ts","../src/utils/MultiRouterMath.ts","../src/entities/MultiRouter.ts","../src/functions/validateSolidityTypeInstance.ts","../src/router.ts","../src/limitorder.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  FANTOM = 250,\n  FANTOM_TESTNET = 4002,\n  XDAI = 100,\n  BSC = 56,\n  BSC_TESTNET = 97,\n  ARBITRUM = 42161,\n  ARBITRUM_TESTNET = 79377087078960,\n  MOONBEAM_TESTNET = 1287,\n  AVALANCHE = 43114,\n  AVALANCHE_TESTNET = 43113,\n  HECO = 128,\n  HECO_TESTNET = 256,\n  HARMONY = 1666600000,\n  HARMONY_TESTNET = 1666700000,\n  OKEX = 66,\n  OKEX_TESTNET = 65,\n  CELO = 42220,\n  PALM = 11297108109,\n  PALM_TESTNET = 11297108099,\n  MOONRIVER = 1285\n}\n","export enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n","export enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n","export enum KashiAction {\n  ADD_ASSET = 1,\n  REPAY = 2,\n  REMOVE_ASSET = 3,\n  REMOVE_COLLATERAL = 4,\n  BORROW = 5,\n  GET_REPAY_SHARE = 6,\n  GET_REPAY_PART = 7,\n  ACCRUE = 8,\n\n  // Functions that don't need accrue to be called\n  ADD_COLLATERAL = 10,\n  UPDATE_EXCHANGE_RATE = 11,\n\n  // Function on BentoBox\n  BENTO_DEPOSIT = 20,\n  BENTO_WITHDRAW = 21,\n  BENTO_TRANSFER = 22,\n  BENTO_TRANSFER_MULTIPLE = 23,\n  BENTO_SETAPPROVAL = 24,\n\n  // Any external call (except to BentoBox)\n  CALL = 30\n}\n","// Fee - Tiers TBD\nexport enum Fee {\n  DEFAULT = 30\n}\n","export enum OrderStatus {\n  FILLED = 'FILLED',\n  CANCELLED = 'CANCELLED',\n  EXPIRED = 'EXPIRED',\n  PENDING = 'PENDING'\n}\n","import { AddressMap } from '../types'\nimport { ChainId } from '../enums'\n\nexport const USDC_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  [ChainId.ROPSTEN]: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\n  [ChainId.KOVAN]: '0xb7a4F3E9097C08dA09517b5aB877F7a917224ede',\n  [ChainId.MATIC]: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n  [ChainId.FANTOM]: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n  [ChainId.BSC]: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  [ChainId.HARMONY]: '0x985458E523dB3d53125813eD68c274899e9DfAb4',\n  [ChainId.HECO]: '0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B',\n  [ChainId.OKEX]: '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85',\n  [ChainId.XDAI]: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\n  [ChainId.ARBITRUM]: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8'\n}\n\nexport const FACTORY_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM]: '0xCC738D2fDE18fe66773b84c8E6C869aB233766D1',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.CELO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM_TESTNET]: '',\n  [ChainId.MOONRIVER]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4'\n}\n\nexport const ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\n  [ChainId.RINKEBY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ROPSTEN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.GÖRLI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.KOVAN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM]: '0x8C9E059a729C17fB294cd782eB66Df3871D29173',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.MATIC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.XDAI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef',\n  [ChainId.AVALANCHE]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.AVALANCHE_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.CELO]: '0x1421bDe4B10e8dd459b3BCb598810B1337D56842',\n  [ChainId.PALM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.PALM_TESTNET]: '',\n  [ChainId.MOONRIVER]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n}\n\nexport const SUSHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n  [ChainId.ROPSTEN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.RINKEBY]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.GÖRLI]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.KOVAN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.FANTOM]: '0x4cf098d3775bd78a4508a13e126798da5911b6cd',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE',\n  [ChainId.BSC]: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '0xd4d42F0b6DEF4CE0383636770eF773390d85c61A',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MASTERCHEF_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n  [ChainId.ROPSTEN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.RINKEBY]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.GÖRLI]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.KOVAN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272',\n  [ChainId.ROPSTEN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.RINKEBY]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.GÖRLI]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.KOVAN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MAKER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50',\n  [ChainId.ROPSTEN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.RINKEBY]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.GÖRLI]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.KOVAN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const TIMELOCK_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BENTOBOX_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ROPSTEN]: '0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF',\n  [ChainId.RINKEBY]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.GÖRLI]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.KOVAN]: '0x9A0D9920D92c178a58D99B455898Df2df22A2eE4',\n  [ChainId.FANTOM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x0319000133d3AdA02600f0875d2cf03D442C3367',\n  [ChainId.MATIC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.XDAI]: '0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324',\n  [ChainId.BSC]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.BSC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ARBITRUM]: '0x74c764D41B77DBbb4fe771daB1939B00b146894A',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const KASHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x7a6DA9903d0a481F40b8336c1463487BC8C0407e',\n  [ChainId.BSC]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '0xa010eE0226cd071BeBd8919A1F675cAE1f1f5D3e',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9',\n  [ChainId.BSC]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '0x0bFcD5dD76218bF9e3BE8A1055f9e6D27E5745eb',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_MULTISWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x545820d5Cc05248da112419fEfb18522c63C8e12',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x73BE093B84c773fe8eE0f76DDc0829E45c215415',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93',\n  [ChainId.BSC]: '0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '0xbe7D5968296843756109D42946D01195320922EF',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xDB6C4EDd9545d3b815dA85E6429B699c418886f9',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x07b6e34EeCF38B02e83b6B4702699717e298967E',\n  [ChainId.BSC]: '0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '0x860D841bfD1cfEf72A14B2b734005799F07dC7ED',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const PEGGED_ORACLE_ADDRESS = '0x6cbfbB38498Df0E1e7A4506593cDB02db9001564'\n\nexport const SUSHISWAP_TWAP_0_ORACLE_ADDRESS = '0x66F03B0d30838A3fee971928627ea6F59B236065'\n\nexport const SUSHISWAP_TWAP_1_ORACLE_ADDRESS = '0x0D51b575591F8f74a2763Ade75D3CDCf6789266f'\n\nexport const CHAINLINK_ORACLE_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.MATIC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.XDAI]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.BSC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.ARBITRUM]: '0xB2B5C26B6868be10fF77e4E233fD231ceB90162a'\n}\n\nexport const BORING_HELPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F',\n  [ChainId.BSC]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '0x37B3287292De241278fB5FCa514a756E0BE924f8',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const STOP_LIMIT_ORDER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '0xce9365dB1C99897f04B3923C03ba9a5f80E8DB87',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1aDb3Bd86bb01797667eC382a0BC6A9854b4005f',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const ARCHER_ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x9917C083FF9FbD29Df1367FBF7F2388A9a202431'\n}\n\nexport const MINICHEF_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.XDAI]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n  [ChainId.ARBITRUM]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3'\n}\n\nexport const WETH9_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  [ChainId.ROPSTEN]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.RINKEBY]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.GÖRLI]: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\n  [ChainId.KOVAN]: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\n  [ChainId.ARBITRUM]: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n  [ChainId.ARBITRUM_TESTNET]: '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\n  [ChainId.BSC]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.FANTOM]: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n  [ChainId.MATIC]: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n  [ChainId.OKEX]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.HECO]: '0x64FF637fB478863B7468bc97D30a5bF3A428a1fD',\n  [ChainId.HARMONY]: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\n  [ChainId.XDAI]: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\n  [ChainId.AVALANCHE]: '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15'\n}\n\nexport const WNATIVE_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: WETH9_ADDRESS[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n  [ChainId.FANTOM]: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n  [ChainId.FANTOM_TESTNET]: '0xf1277d1Ed8AD466beddF92ef448A132661956621',\n  [ChainId.MATIC]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.MATIC_TESTNET]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\n  [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  [ChainId.BSC_TESTNET]: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n  [ChainId.MOONBEAM_TESTNET]: '0xe73763DB808ecCDC0E36bC8E32510ED126910394',\n  [ChainId.AVALANCHE]: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n  [ChainId.HECO_TESTNET]: '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\n  [ChainId.HARMONY]: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n  [ChainId.HARMONY_TESTNET]: '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\n  [ChainId.OKEX]: '0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15',\n  [ChainId.OKEX_TESTNET]: '0x2219845942d28716c0F7C605765fABDcA1a7d9E0',\n  [ChainId.CELO]: '0x471EcE3750Da237f93B8E339c536989b8978a438',\n  [ChainId.PALM]: '0xF98cABF0a963452C5536330408B2590567611a71',\n  [ChainId.MOONRIVER]: '0xf50225a84382c74CbdeA10b0c176f71fc3DE0C4d'\n}\n\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d'\n}\n\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.GÖRLI]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.ROPSTEN]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n}\n\nexport const ZAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\n  [ChainId.ROPSTEN]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2'\n}\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982',\n  [ChainId.ROPSTEN]: '0x84d1f7202e0e7dac211617017ca72a2cb5e2b955'\n}\n\nexport const MULTICALL2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ROPSTEN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.RINKEBY]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.GÖRLI]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.KOVAN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ARBITRUM]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.ARBITRUM_TESTNET]: '0xa501c031958F579dB7676fF1CE78AD305794d579',\n  [ChainId.CELO]: '0x9aac9048fC8139667D6a2597B902865bfdc225d3',\n  [ChainId.FANTOM]: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n  [ChainId.BSC]: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.PALM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.MOONRIVER]: '0x270f2F35bED92B7A59eA5F08F6B3fd34c8D9D9b5'\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\n// Functions that need accrue to be called\nexport const ACTION_ADD_ASSET = 1\nexport const ACTION_REPAY = 2\nexport const ACTION_REMOVE_ASSET = 3\nexport const ACTION_REMOVE_COLLATERAL = 4\nexport const ACTION_BORROW = 5\nexport const ACTION_GET_REPAY_SHARE = 6\nexport const ACTION_GET_REPAY_PART = 7\nexport const ACTION_ACCRUE = 8\n\n// Functions that don't need accrue to be called\nexport const ACTION_ADD_COLLATERAL = 10\nexport const ACTION_UPDATE_EXCHANGE_RATE = 11\n\n// Function on BentoBox\nexport const ACTION_BENTO_DEPOSIT = 20\nexport const ACTION_BENTO_WITHDRAW = 21\nexport const ACTION_BENTO_TRANSFER = 22\nexport const ACTION_BENTO_TRANSFER_MULTIPLE = 23\nexport const ACTION_BENTO_SETAPPROVAL = 24\n\n// Any external call (except to BentoBox)\nexport const ACTION_CALL = 30\n\nexport const MINIMUM_TARGET_UTILIZATION = BigNumber.from('700000000000000000') // 70%\n\nexport const MAXIMUM_TARGET_UTILIZATION = BigNumber.from('800000000000000000') // 80%\n\nexport const UTILIZATION_PRECISION = BigNumber.from('1000000000000000000')\n\nexport const FULL_UTILIZATION = BigNumber.from('1000000000000000000')\n\nexport const FULL_UTILIZATION_MINUS_MAX = FULL_UTILIZATION.sub(MAXIMUM_TARGET_UTILIZATION)\n\nexport const STARTING_INTEREST_PER_YEAR = BigNumber.from(317097920)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 1% APR\n\nexport const MINIMUM_INTEREST_PER_YEAR = BigNumber.from(79274480)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 0.25% APR\n\nexport const MAXIMUM_INTEREST_PER_YEAR = BigNumber.from(317097920000)\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(60))\n  .mul(BigNumber.from(24))\n  .mul(BigNumber.from(365)) // approx 1000% APR\n\nexport const INTEREST_ELASTICITY = BigNumber.from('28800000000000000000000000000000000000000') // Half or double in 28800 seconds (8 hours) if linear\n\nexport const FACTOR_PRECISION = BigNumber.from('1000000000000000000')\n\nexport const PROTOCOL_FEE = BigNumber.from('10000') // 10%\n\nexport const PROTOCOL_FEE_DIVISOR = BigNumber.from('100000')\n","import { Currency } from './Currency'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class AbstractCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { AbstractCurrency } from './AbstractCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends AbstractCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n","import { AbstractCurrency } from './AbstractCurrency'\nimport { ChainId } from '../enums'\nimport { Currency } from './Currency'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from '../functions/validateAndParseAddress'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends AbstractCurrency {\n  public readonly chainId: ChainId\n  public readonly address: string\n\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\n    super(chainId, decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n","import { USDC_ADDRESS, WETH9_ADDRESS, WNATIVE_ADDRESS } from './addresses'\n\nimport { ChainId } from '../enums'\nimport { Token } from '../entities/Token'\nimport { TokenMap } from '../types/TokenMap'\n\nexport const USDC: TokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, USDC_ADDRESS[ChainId.MAINNET], 6, 'USDC', 'USD Coin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, USDC_ADDRESS[ChainId.ROPSTEN], 6, 'USDC', 'USD Coin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, USDC_ADDRESS[ChainId.KOVAN], 6, 'USDC', 'USD Coin'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, USDC_ADDRESS[ChainId.FANTOM], 6, 'USDC', 'USD Coin'),\n  [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, USDC_ADDRESS[ChainId.HARMONY], 6, 'USDC', 'USD Coin'),\n  [ChainId.HECO]: new Token(ChainId.HECO, USDC_ADDRESS[ChainId.HECO], 6, 'USDC', 'USD Coin'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, USDC_ADDRESS[ChainId.OKEX], 18, 'USDC', 'USD Coin'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, USDC_ADDRESS[ChainId.XDAI], 6, 'USDC', 'USD Coin'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, USDC_ADDRESS[ChainId.ARBITRUM], 6, 'USDC', 'USD Coin')\n}\n\nexport const WETH9: TokenMap = {\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, WETH9_ADDRESS[ChainId.MAINNET], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, WETH9_ADDRESS[ChainId.ROPSTEN], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, WETH9_ADDRESS[ChainId.RINKEBY], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, WETH9_ADDRESS[ChainId.GÖRLI], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, WETH9_ADDRESS[ChainId.KOVAN], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, WETH9_ADDRESS[ChainId.ARBITRUM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ARBITRUM_TESTNET]: new Token(\n    ChainId.ARBITRUM_TESTNET,\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.BSC]: new Token(ChainId.BSC, WETH9_ADDRESS[ChainId.BSC], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WETH9_ADDRESS[ChainId.FANTOM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WETH9_ADDRESS[ChainId.MATIC], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WETH9_ADDRESS[ChainId.OKEX], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.HECO]: new Token(ChainId.HECO, WETH9_ADDRESS[ChainId.HECO], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WETH9_ADDRESS[ChainId.HARMONY], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WETH9_ADDRESS[ChainId.XDAI], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WETH9_ADDRESS[ChainId.AVALANCHE], 18, 'WETH', 'Wrapped Ether')\n}\n\nexport const WNATIVE: TokenMap = {\n  [ChainId.MAINNET]: WETH9[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WNATIVE_ADDRESS[ChainId.FANTOM], 18, 'WFTM', 'Wrapped FTM'),\n  [ChainId.FANTOM_TESTNET]: new Token(\n    ChainId.FANTOM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\n    18,\n    'FTM',\n    'Wrapped FTM'\n  ),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\n    18,\n    'WMATIC',\n    'Wrapped Matic'\n  ),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WNATIVE_ADDRESS[ChainId.XDAI], 18, 'WXDAI', 'Wrapped xDai'),\n  [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.BSC_TESTNET]: new Token(\n    ChainId.BSC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\n    18,\n    'WBNB',\n    'Wrapped BNB'\n  ),\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\n  [ChainId.MOONBEAM_TESTNET]: new Token(\n    ChainId.MOONBEAM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WNATIVE_ADDRESS[ChainId.AVALANCHE], 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.AVALANCHE_TESTNET]: new Token(\n    ChainId.AVALANCHE_TESTNET,\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\n    18,\n    'WAVAX',\n    'Wrapped AVAX'\n  ),\n  [ChainId.HECO]: new Token(ChainId.HECO, WNATIVE_ADDRESS[ChainId.HECO], 18, 'WHT', 'Wrapped HT'),\n  [ChainId.HECO_TESTNET]: new Token(\n    ChainId.HECO_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\n    18,\n    'WHT',\n    'Wrapped HT'\n  ),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WNATIVE_ADDRESS[ChainId.HARMONY], 18, 'WONE', 'Wrapped ONE'),\n  [ChainId.HARMONY_TESTNET]: new Token(\n    ChainId.HARMONY_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\n    18,\n    'WONE',\n    'Wrapped ONE'\n  ),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WNATIVE_ADDRESS[ChainId.OKEX], 18, 'WOKT', 'Wrapped OKExChain'),\n  [ChainId.OKEX_TESTNET]: new Token(\n    ChainId.OKEX_TESTNET,\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\n    18,\n    'WOKT',\n    'Wrapped OKExChain'\n  ),\n  [ChainId.CELO]: new Token(ChainId.CELO, WNATIVE_ADDRESS[ChainId.CELO], 18, 'CELO', 'Celo'),\n  [ChainId.PALM]: new Token(ChainId.PALM, WNATIVE_ADDRESS[ChainId.PALM], 18, 'WPALM', 'Wrapped Palm'),\n  [ChainId.MOONRIVER]: new Token(\n    ChainId.MOONRIVER,\n    WNATIVE_ADDRESS[ChainId.MOONRIVER],\n    18,\n    'WMOVR',\n    'Wrapped Moonriver'\n  )\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Avalanche extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'AVAX', 'Avalanche')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Avalanche } = {}\n\n  public static onChain(chainId: number): Avalanche {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Binance extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'BNB', 'Binance Coin')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Binance } = {}\n\n  public static onChain(chainId: number): Binance {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Celo extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'CELO', 'Celo')\n  }\n\n  public get wrapped(): Token {\n    const wcelo = WNATIVE[this.chainId]\n    invariant(!!wcelo, 'WRAPPED')\n    return wcelo\n  }\n\n  private static _cache: { [chainId: number]: Celo } = {}\n\n  public static onChain(chainId: number): Celo {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WETH9 } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Fantom extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'FTM', 'Fantom')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Fantom } = {}\n\n  public static onChain(chainId: number): Fantom {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Harmony extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ONE', 'Harmony')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Harmony } = {}\n\n  public static onChain(chainId: number): Harmony {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Heco extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'HT', 'Huobi Token')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Heco } = {}\n\n  public static onChain(chainId: number): Heco {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Matic extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'MATIC', 'Matic')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Matic } = {}\n\n  public static onChain(chainId: number): Matic {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Movr extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'MOVR', 'Moonriver')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Movr } = {}\n\n  public static onChain(chainId: number): Movr {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Movr(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Okex extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'OKT', 'OKExChain')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Okex } = {}\n\n  public static onChain(chainId: number): Okex {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class xDai extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'XDAI', 'xDai')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: xDai } = {}\n\n  public static onChain(chainId: number): xDai {\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Palm extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'PALM', 'Palm')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Palm } = {}\n\n  public static onChain(chainId: number): Palm {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import {\n  Avalanche,\n  Binance,\n  Celo,\n  Ether,\n  Fantom,\n  Harmony,\n  Heco,\n  Matic,\n  Movr,\n  Okex,\n  Palm,\n  xDai\n} from '../entities/Native'\n\nimport { ChainId } from '../enums'\n\nexport const NATIVE = {\n  [ChainId.MAINNET]: Ether.onChain(ChainId.MAINNET),\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\n  [ChainId.ARBITRUM]: Ether.onChain(ChainId.ARBITRUM),\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM),\n  [ChainId.MOONRIVER]: Movr.onChain(ChainId.MOONRIVER)\n}\n","import JSBI from 'jsbi'\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n","import JSBI from 'jsbi'\n\nexport * from './addresses'\nexport * from './kashi'\nexport * from './natives'\nexport * from './numbers'\nexport * from './tokens'\n\nexport const INIT_CODE_HASH: string = '0x8f0e7bd0f6fa7c615890ae2cd01935a8f7a878199761c93b3cd0ffca4486d84d'\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\n\nexport enum SolidityType {\n  uint8 = 'uint8',\n  uint256 = 'uint256'\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n}\n\nexport const LAMBDA_URL = 'https://9epjsvomc4.execute-api.us-east-1.amazonaws.com/dev'\n\nexport const SOCKET_URL = 'wss://hfimt374ge.execute-api.us-east-1.amazonaws.com/dev'\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import _Big, { RoundingMode } from 'big.js'\n\nimport { BigintIsh } from '../types'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport _Decimal from 'decimal.js-light'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { MaxUint256 } from '../constants'\nimport { Rounding } from '../enums'\nimport { Token } from './Token'\nimport _Big from 'big.js'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport invariant from 'tiny-invariant'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [\n          {\n            baseAmount: CurrencyAmount<TBase>\n            quoteAmount: CurrencyAmount<TQuote>\n          }\n        ]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { keccak256, pack } from '@ethersproject/solidity'\n\nimport { defaultAbiCoder } from '@ethersproject/abi'\n\nexport const computePoolInitCodeHash = ({\n  creationCode,\n  deployData,\n  masterDeployerAddress\n}: {\n  creationCode: string\n  deployData: string\n  masterDeployerAddress: string\n}): string =>\n  keccak256(\n    ['bytes'],\n    [\n      pack(\n        ['bytes', 'bytes'],\n        [creationCode, defaultAbiCoder.encode(['bytes', 'address'], [deployData, masterDeployerAddress])]\n      )\n    ]\n  )\n","import { Fee } from '../enums'\nimport { Token } from '../entities'\nimport { computePoolInitCodeHash } from './computePoolInitCodeHash'\nimport { defaultAbiCoder } from '@ethersproject/abi'\nimport { getCreate2Address } from '@ethersproject/address'\nimport { keccak256 } from '@ethersproject/solidity'\n\nconst MASTER_DEPLOYER_ADDRESS = '0xa2A7Aa74cb94f37221FD49F5BA6F3fF876092700'\n\nconst CONSTANT_PRODUCT_POOL_CREATION_CODE =\n  '0x6101806040523480156200001257600080fd5b5060405162004195380380620041958339810160408190526200003591620005d2565b604080518082018252600e81526d29bab9b434902628102a37b5b2b760911b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fc2bf45081e840722410522aa366600d7fe4da5bfb5a5b417f4d5125b4ed180a4918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c0016040516020818303038152906040528051906020012060808181525050506000806000808580602001905181019062000132919062000572565b929650909450925090506001600160a01b038416620001875760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161415620001eb5760405162461bcd60e51b815260206004820152601360248201527f4944454e544943414c5f4144445245535345530000000000000000000000000060448201526064016200017e565b6001600160a01b038416301415620002365760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b60448201526064016200017e565b6001600160a01b038316301415620002815760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b60448201526064016200017e565b612710821115620002c85760405162461bcd60e51b815260206004820152601060248201526f494e56414c49445f535741505f46454560801b60448201526064016200017e565b60408051600481526024810182526020810180516001600160e01b03166360a56c0160e11b17905290516000916001600160a01b038816916200030c9190620006b9565b600060405180830381855afa9150503d806000811462000349576040519150601f19603f3d011682016040523d82523d6000602084013e6200034e565b606091505b5060408051600481526024810182526020810180516001600160e01b0316630605066960e11b1790529051919350600092506001600160a01b03891691620003979190620006b9565b600060405180830381855afa9150503d8060008114620003d4576040519150601f19603f3d011682016040523d82523d6000602084013e620003d9565b606091505b5060408051600481526024810182526020810180516001600160e01b0316634da3182760e01b1790529051919350600092506001600160a01b038a1691620004229190620006b9565b600060405180830381855afa9150503d80600081146200045f576040519150601f19603f3d011682016040523d82523d6000602084013e62000464565b606091505b506001600160601b031960608a811b82166101405289901b166101605260a087905261271087900360c0528451909250620004aa9150840160209081019085016200069f565b6004558151620004c490830160209081019084016200054b565b60601b6001600160601b03191660e0528051620004eb90602090830181019083016200054b565b6001600160601b0319606091821b8116610100529089901b1661012052600160095583156200052a57600880546001600160e01b0316600160e01b1790555b50505050505050505062000739565b8051620005468162000720565b919050565b6000602082840312156200055e57600080fd5b81516200056b8162000720565b9392505050565b600080600080608085870312156200058957600080fd5b8451620005968162000720565b6020860151909450620005a98162000720565b6040860151606087015191945092508015158114620005c757600080fd5b939692955090935050565b60008060408385031215620005e657600080fd5b82516001600160401b0380821115620005fe57600080fd5b818501915085601f8301126200061357600080fd5b8151818111156200062857620006286200070a565b604051601f8201601f19908116603f011681019083821181831017156200065357620006536200070a565b816040528281528860208487010111156200066d57600080fd5b62000680836020830160208801620006d7565b8096505050505050620006966020840162000539565b90509250929050565b600060208284031215620006b257600080fd5b5051919050565b60008251620006cd818460208701620006d7565b9190910192915050565b60005b83811015620006f4578181015183820152602001620006da565b8381111562000704576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200073657600080fd5b50565b60805160a05160c05160e05160601c6101005160601c6101205160601c6101405160601c6101605160601c61390062000895600039600081816105b301528181610791015281816108c00152818161096e01528181610ff6015281816110fe01528181611336015281816113a5015281816115e701528181611fc30152818161204a01526129e701526000818161032e0152818161070d01528181610a5301528181610b8201528181610fca01528181611095015281816112e2015281816114860152818161157901528181611d24015281816120830152818161216e01526128e801526000818161058c015281816118070152611c240152600081816103f901528181612650015281816127c6015281816128ac0152612a900152600081816102e20152612eb3015260006125520152600081816104200152818161315501526131c00152600081816103d2015261233901526139006000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063627dd56a1161012a578063a69840a8116100bd578063c14ad8021161008c578063d21220a711610071578063d21220a7146105ae578063d505accf146105d5578063dd62ed3e146105e857600080fd5b8063c14ad8021461057e578063cf58879a1461058757600080fd5b8063a69840a81461051e578063a8f1f52e14610545578063a9059cbb14610558578063af8c09bf1461056b57600080fd5b80637ba0e2e7116100f95780637ba0e2e7146104a55780637ecebe00146104b857806392bc3219146104d857806395d89b41146104e257600080fd5b8063627dd56a1461045457806367e4ac2c1461046757806370a082311461047c5780637464fc3d1461049c57600080fd5b80632a07b6c7116101a25780634da31827116101715780634da31827146103f457806354cf2aeb1461041b5780635909c0d5146104425780635a3d54931461044b57600080fd5b80632a07b6c71461036c57806330adf81f1461038c578063313ce567146103b35780633644e515146103cd57600080fd5b80630c0a0cd2116101de5780630c0a0cd2146102dd5780630dfe16811461032957806318160ddd1461035057806323b872dd1461035957600080fd5b8063053da1c81461021057806306fdde03146102365780630902f1ac1461027f578063095ea7b3146102ba575b600080fd5b61022361021e366004613566565b610613565b6040519081526020015b60405180910390f35b6102726040518060400160405280600e81526020017f5375736869204c5020546f6b656e00000000000000000000000000000000000081525081565b60405161022d9190613716565b610287610c3e565b604080516dffffffffffffffffffffffffffff948516815293909216602084015263ffffffff169082015260600161022d565b6102cd6102c8366004613449565b610ca7565b604051901515815260200161022d565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161022d565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b61022360005481565b6102cd6103673660046134ae565b610d20565b61037f61037a366004613566565b610e6c565b60405161022d91906136b1565b6102237f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103bb601281565b60405160ff909116815260200161022d565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b61022360055481565b61022360065481565b610223610462366004613566565b6111e1565b61046f611557565b60405161022d9190613657565b61022361048a36600461327d565b60016020526000908152604090205481565b61022360075481565b6102236104b3366004613566565b611656565b6102236104c636600461327d565b60036020526000908152604090205481565b6104e0611bb2565b005b6102726040518060400160405280600381526020017f534c50000000000000000000000000000000000000000000000000000000000081525081565b6102237f54726964656e743a436f6e7374616e7450726f6475637400000000000000000081565b610223610553366004613566565b611cad565b6102cd610566366004613449565b611de0565b610223610579366004613566565b611e65565b61022360045481565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b6104e06105e33660046134ef565b61220e565b6102236105f6366004613475565b600260209081526000928352604080842090915290825290205481565b6000600954600114610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b4544000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600260095560008080808061069d87890189613305565b9450945094509450945060008060006107056008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b9250925092507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561096c5761078a85846dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff1661254a565b98506107b87f00000000000000000000000000000000000000000000000000000000000000008a89896125ad565b6040517fbd50c7b1000000000000000000000000000000000000000000000000000000008152339063bd50c7b1906107f4908790600401613716565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b505050506000806108316128a5565b9150915086856dffffffffffffffffffffffffffff16830310156108b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f494e53554646494349454e545f414d4f554e545f494e00000000000000000000604482015260640161067d565b6108be8282878787612b1d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628a8f60405161095d929190918252602082015260400190565b60405180910390a45050610c2a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610a21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e00000000000000000000000000604482015260640161067d565b610a4c85836dffffffffffffffffffffffffffff16856dffffffffffffffffffffffffffff1661254a565b9850610a7a7f00000000000000000000000000000000000000000000000000000000000000008a89896125ad565b6040517fbd50c7b1000000000000000000000000000000000000000000000000000000008152339063bd50c7b190610ab6908790600401613716565b600060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b50505050600080610af36128a5565b9150915086846dffffffffffffffffffffffffffff1682031015610b73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f494e53554646494349454e545f414d4f554e545f494e00000000000000000000604482015260640161067d565b610b808282878787612b1d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628a8f604051610c1f929190918252602082015260400190565b60405180910390a450505b505060016009555094979650505050505050565b6000806000610c9c6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b925092509250909192565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610d0f9086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610dbd5773ffffffffffffffffffffffffffffffffffffffff8416600090815260026020908152604080832033845290915281208054849290610db7908490613792565b90915550505b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604081208054849290610df2908490613792565b909155505073ffffffffffffffffffffffffffffffffffffffff808416600081815260016020526040908190208054860190555190918616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e5a9086815260200190565b60405180910390a35060019392505050565b6060600954600114610eda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b6002600955600080610eee84860186613414565b915091506000806000610f506008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b925092509250600080610f616128a5565b60008054308252600160205260409091205492945090925090610f85878784612e33565b90910190600082610f968684613755565b610fa09190613741565b9050600083610faf8685613755565b610fb99190613741565b9050610fc53084612ee2565b610ff17f0000000000000000000000000000000000000000000000000000000000000000838d8d6125ad565b61101d7f0000000000000000000000000000000000000000000000000000000000000000828d8d6125ad565b8186039550808503945061103486868b8b8b612b1d565b6110466110418688613755565b612f75565b6007556040805160028082526060820190925290816020015b604080518082019091526000808252602082015281526020019060019003908161105f579050509b5060405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001838152508c6000815181106110e6576110e6613847565b602002602001018190525060405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001828152508c60018151811061114f5761114f613847565b60200260200101819052508a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649684846040516111c2929190918252602082015260400190565b60405180910390a35050600160095550979a9950505050505050505050565b600060095460011461124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b600260095560008080611264858701876132be565b92509250925060008060006112c86008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b9250925092506000806112d96128a5565b915091506000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614156113a3577f00000000000000000000000000000000000000000000000000000000000000009050866dffffffffffffffffffffffffffff168403915061139782886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff1661254a565b9a508a830392506114bf565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e00000000000000000000000000604482015260640161067d565b50506008546dffffffffffffffffffffffffffff6e01000000000000000000000000000090910481168203907f0000000000000000000000000000000000000000000000000000000000000000906114b7908390888116908a1661254a565b9a508a840393505b6114cb818c8b8b6125ad565b6114d88484898989612b1d565b8073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062858f604051610c1f929190918252602082015260400190565b60408051600280825260608083018452926020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106115ab576115ab613847565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061161957611619613847565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505090565b60006009546001146116c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b600260095560006116d78385018561327d565b905060008060006117376008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b9250925092506000806117486128a5565b600054919350915061175b868683612e33565b0160006117786dffffffffffffffffffffffffffff881685613792565b905060006117966dffffffffffffffffffffffffffff881685613792565b90506000806117c784848c6dffffffffffffffffffffffffffff168c6dffffffffffffffffffffffffffff166130fa565b909250905060006117ef6117db8389613792565b6117e5858b613792565b6110419190613755565b905085611a705761180360006103e86131fd565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637cd07e476040518163ffffffff1660e01b815260040160206040518083038186803b15801561186b57600080fd5b505afa15801561187f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a391906132a1565b90503373ffffffffffffffffffffffffffffffffffffffff821614156119dd578073ffffffffffffffffffffffffffffffffffffffff166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b15801561190957600080fd5b505afa15801561191d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194191906135d8565b9d508d1580159061197257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8e14155b6119d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4241445f444553495245445f4c49515549444954590000000000000000000000604482015260640161067d565b611a6a565b73ffffffffffffffffffffffffffffffffffffffff811615611a5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4f4e4c595f4d49475241544f5200000000000000000000000000000000000000604482015260640161067d565b611a676103e883613792565b9d505b50611ab8565b6000611a926110416dffffffffffffffffffffffffffff808e16908f16613755565b90508087611aa08285613792565b611aaa9190613755565b611ab49190613741565b9d50505b8c611b1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e544544000000604482015260640161067d565b611b298c8e6131fd565b611b3688888d8d8d612b1d565b611b43611041888a613755565b600755604080518681526020810186905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdbba30eb0402b389513e87f51f4db2db80bed454384ec6925a24097c3548a02a91015b60405180910390a35050600160095550989b9a5050505050505050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc14ad80200000000000000000000000000000000000000000000000000000000179052905160009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691611c4f919061363b565b600060405180830381855afa9150503d8060008114611c8a576040519150601f19603f3d011682016040523d82523d6000602084013e611c8f565b606091505b5091505080806020019051810190611ca791906135d8565b60045550565b60008080611cbd84860186613449565b91509150600080611d1d6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50915091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611da857611da183836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff1661254a565b9450611dd6565b611dd383826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff1661254a565b94505b5050505092915050565b33600090815260016020526040812080548391908390611e01908490613792565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260016020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d0f9086815260200190565b6000600954600114611ed3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b600260095560008080611ee8858701876132be565b9250925092506000806000611f4c6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b925092509250600080611f5d6128a5565b60008054308252600160205260409091205492945090925090611f81878784612e33565b90910190600082611f928684613755565b611f9c9190613741565b9050600083611fab8685613755565b611fb59190613741565b9050611fc13084612ee2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614156120815761204482838b6dffffffffffffffffffffffffffff1603838b6dffffffffffffffffffffffffffff160361254a565b016120717f0000000000000000000000000000000000000000000000000000000000000000828d8d6125ad565b9b5050918a90039160008b6121a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614612136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e56414c49445f4f55545055545f544f4b454e000000000000000000000000604482015260640161067d565b61216581828a6dffffffffffffffffffffffffffff1603848c6dffffffffffffffffffffffffffff160361254a565b820191506121957f0000000000000000000000000000000000000000000000000000000000000000838d8d6125ad565b509a50928a9003928a60005b6121ae86868b8b8b612b1d565b6121bb6110418688613755565b600755604080518381526020810183905273ffffffffffffffffffffffffffffffffffffffff8d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364969101611b92565b42841015612278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161067d565b73ffffffffffffffffffffffffffffffffffffffff878116600081815260036020908152604080832080546001810190915581517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a084019490945260c08084018990528451808503909101815260e0840190945283519301929092207f19010000000000000000000000000000000000000000000000000000000000006101008301527f000000000000000000000000000000000000000000000000000000000000000061010283015261012282015261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156123f1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061246c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6124d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f494e56414c49445f5045524d49545f5349474e41545552450000000000000000604482015260640161067d565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526002602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6000806125777f000000000000000000000000000000000000000000000000000000000000000086613755565b90508061258661271086613755565b6125909190613729565b61259a8483613755565b6125a49190613741565b95945050505050565b801561272f576040805173ffffffffffffffffffffffffffffffffffffffff8681166024830152306044830152848116606483015260006084830181905260a48084018890528451808503909101815260c490930184526020830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97da6d300000000000000000000000000000000000000000000000000000000017905292517f00000000000000000000000000000000000000000000000000000000000000009091169161267c9161363b565b6000604051808303816000865af19150503d80600081146126b9576040519150601f19603f3d011682016040523d82523d6000602084013e6126be565b606091505b5050905080612729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f57495448445241575f4641494c45440000000000000000000000000000000000604482015260640161067d565b5061289f565b6040805173ffffffffffffffffffffffffffffffffffffffff8681166024830152306044830152848116606483015260848083018790528351808403909101815260a490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff18d03cc0000000000000000000000000000000000000000000000000000000017905291516000927f000000000000000000000000000000000000000000000000000000000000000016916127f09161363b565b6000604051808303816000865af19150503d806000811461282d576040519150601f19603f3d011682016040523d82523d6000602084013e612832565b606091505b505090508061289d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161067d565b505b50505050565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f7888aec7f00000000000000000000000000000000000000000000000000000000000000003060405160240161293b92919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051612989919061363b565b600060405180830381855afa9150503d80600081146129c4576040519150601f19603f3d011682016040523d82523d6000602084013e6129c9565b606091505b50915050808060200190518101906129e191906135d8565b604080517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff90811660248301523060448084019190915283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff7888aec0000000000000000000000000000000000000000000000000000000017905291519295506000927f000000000000000000000000000000000000000000000000000000000000000090921691612abd919061363b565b600060405180830381855afa9150503d8060008114612af8576040519150601f19603f3d011682016040523d82523d6000602084013e612afd565b606091505b5091505080806020019051810190612b1591906135d8565b925050509091565b6dffffffffffffffffffffffffffff8511801590612b4957506dffffffffffffffffffffffffffff8411155b612baf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4f564552464c4f57000000000000000000000000000000000000000000000000604482015260640161067d565b6008547c0100000000000000000000000000000000000000000000000000000000900463ffffffff16612c3357600880546dffffffffffffffffffffffffffff8681166e010000000000000000000000000000027fffffffff0000000000000000000000000000000000000000000000000000000090921690881617179055612df3565b6000612c44640100000000426137d5565b90508163ffffffff168163ffffffff1614158015612c7157506dffffffffffffffffffffffffffff841615155b8015612c8c57506dffffffffffffffffffffffffffff831615155b15612d515781810360006dffffffffffffffffffffffffffff86167bffffffffffffffffffffffffffff0000000000000000000000000000607087901b1681612cd757612cd7613818565b600580549290910463ffffffff851681029092019055905060006dffffffffffffffffffffffffffff8616607088901b7bffffffffffffffffffffffffffff00000000000000000000000000001681612d3257612d32613818565b0490508263ffffffff1681026006600082825401925050819055505050505b6008805463ffffffff9092167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8881166e010000000000000000000000000000027fffffffff00000000000000000000000000000000000000000000000000000000909516908a161793909317929092169190911790555b60408051868152602081018690527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050505050565b6007546000908015612eda576000612e616110416dffffffffffffffffffffffffffff808816908916613755565b905081811115612ed857612710816004548484612e7e9190613792565b612e889088613755565b612e929190613755565b612e9c9190613741565b612ea69190613741565b92508215612ed857612ed87f0000000000000000000000000000000000000000000000000000000000000000846131fd565b505b509392505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839290612f17908490613792565b909155505060008054829003815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b600081612f8457506000919050565b8160017001000000000000000000000000000000008210612faa5760809190911c9060401b5b680100000000000000008210612fc55760409190911c9060201b5b6401000000008210612fdc5760209190911c9060101b5b620100008210612ff15760109190911c9060081b5b61010082106130055760089190911c9060041b5b601082106130185760049190911c9060021b5b600882106130245760011b5b600181858161303557613035613818565b048201901c9050600181858161304d5761304d613818565b048201901c9050600181858161306557613065613818565b048201901c9050600181858161307d5761307d613818565b048201901c9050600181858161309557613095613818565b048201901c905060018185816130ad576130ad613818565b048201901c905060018185816130c5576130c5613818565b048201901c905060008185816130dd576130dd613818565b0490508082106130ed57806130ef565b815b93505050505b919050565b600080831580613108575082155b15613118575060009050806131f4565b6000846131258589613755565b61312f9190613741565b905085811161318a576131456127106002613755565b61314f8288613792565b613179907f0000000000000000000000000000000000000000000000000000000000000000613755565b6131839190613741565b91506131f2565b6000846131978789613755565b6131a19190613741565b90506131b06127106002613755565b6131ba828a613792565b6131e4907f0000000000000000000000000000000000000000000000000000000000000000613755565b6131ee9190613741565b9350505b505b94509492505050565b8060008082825461320e9190613729565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101612f69565b803580151581146130f557600080fd5b60006020828403121561328f57600080fd5b813561329a816138a5565b9392505050565b6000602082840312156132b357600080fd5b815161329a816138a5565b6000806000606084860312156132d357600080fd5b83356132de816138a5565b925060208401356132ee816138a5565b91506132fc6040850161326d565b90509250925092565b600080600080600060a0868803121561331d57600080fd5b8535613328816138a5565b94506020860135613338816138a5565b93506133466040870161326d565b925060608601359150608086013567ffffffffffffffff8082111561336a57600080fd5b818801915088601f83011261337e57600080fd5b81358181111561339057613390613876565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156133d6576133d6613876565b816040528281528b60208487010111156133ef57600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b6000806040838503121561342757600080fd5b8235613432816138a5565b91506134406020840161326d565b90509250929050565b6000806040838503121561345c57600080fd5b8235613467816138a5565b946020939093013593505050565b6000806040838503121561348857600080fd5b8235613493816138a5565b915060208301356134a3816138a5565b809150509250929050565b6000806000606084860312156134c357600080fd5b83356134ce816138a5565b925060208401356134de816138a5565b929592945050506040919091013590565b600080600080600080600060e0888a03121561350a57600080fd5b8735613515816138a5565b96506020880135613525816138a5565b95506040880135945060608801359350608088013560ff8116811461354957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806020838503121561357957600080fd5b823567ffffffffffffffff8082111561359157600080fd5b818501915085601f8301126135a557600080fd5b8135818111156135b457600080fd5b8660208285010111156135c657600080fd5b60209290920196919550909350505050565b6000602082840312156135ea57600080fd5b5051919050565b600081518084526136098160208601602086016137a9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000825161364d8184602087016137a9565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156136a557835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613673565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613709578151805173ffffffffffffffffffffffffffffffffffffffff1685528601518685015292840192908501906001016136ce565b5091979650505050505050565b60208152600061329a60208301846135f1565b6000821982111561373c5761373c6137e9565b500190565b60008261375057613750613818565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561378d5761378d6137e9565b500290565b6000828210156137a4576137a46137e9565b500390565b60005b838110156137c45781810151838201526020016137ac565b8381111561289f5750506000910152565b6000826137e4576137e4613818565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146138c757600080fd5b5056fea264697066735822122004f193ad403a2048e6ef0c1fc9da9b9f522fe2ad030c99737c73f0f04901cf7464736f6c63430008070033'\n\nexport const computeConstantProductPoolAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB,\n  fee,\n  twap\n}: {\n  factoryAddress: string\n  tokenA: Token\n  tokenB: Token\n  fee: Fee\n  twap: boolean\n}): string => {\n  // does safety checks\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n\n  const deployData = defaultAbiCoder.encode(\n    ['address', 'address', 'uint256', 'bool'],\n    [...[token0.address, token1.address].sort(), fee, twap]\n  )\n\n  // Compute init code hash based off the bytecode, deployData & masterDeployerAddress\n  const CONSTANT_PRODUCT_POOL_INIT_CODE_HASH = computePoolInitCodeHash({\n    creationCode: CONSTANT_PRODUCT_POOL_CREATION_CODE,\n    deployData,\n    masterDeployerAddress: MASTER_DEPLOYER_ADDRESS\n  })\n\n  // Compute pool address\n  return getCreate2Address(factoryAddress, keccak256(['bytes'], [deployData]), CONSTANT_PRODUCT_POOL_INIT_CODE_HASH)\n}\n","import JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst TWO = JSBI.BigInt(2)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\n\nimport { BigintIsh } from '../types'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fee } from '../enums'\nimport JSBI from 'jsbi'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport { computeConstantProductPoolAddress } from '../functions/computeConstantProductPoolAddress'\nimport invariant from 'tiny-invariant'\nimport { sqrt } from '../functions/sqrt'\n\nexport class ConstantProductPool {\n  public readonly liquidityToken: Token\n  public readonly fee: Fee\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\n\n  public static getAddress(tokenA: Token, tokenB: Token, fee: Fee = 25, twap: boolean = true): string {\n    return computeConstantProductPoolAddress({\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n      tokenA,\n      tokenB,\n      fee,\n      twap\n    })\n  }\n\n  public constructor(\n    currencyAmountA: CurrencyAmount<Token>,\n    currencyAmountB: CurrencyAmount<Token>,\n    fee: Fee = 25,\n    twap: boolean = true\n  ) {\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\n      ? [currencyAmountA, currencyAmountB]\n      : [currencyAmountB, currencyAmountA]\n    this.liquidityToken = new Token(\n      currencyAmounts[0].currency.chainId,\n      ConstantProductPool.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency, fee, twap),\n      18,\n      'SLP',\n      'Sushi LP Token'\n    )\n    this.fee = fee\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price<Token, Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): number {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].currency\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].currency\n  }\n\n  public get reserve0(): CurrencyAmount<Token> {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): CurrencyAmount<Token> {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, ConstantProductPool] {\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency)\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\n    const outputAmount = CurrencyAmount.fromRawAmount(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new ConstantProductPool(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, ConstantProductPool] {\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.currency)\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\n    const denominator = JSBI.multiply(\n      JSBI.subtract(outputReserve.quotient, outputAmount.quotient),\n      _997 // 3%\n    )\n    const inputAmount = CurrencyAmount.fromRawAmount(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new ConstantProductPool(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: CurrencyAmount<Token>,\n    tokenAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ): CurrencyAmount<Token> {\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\n      liquidity = JSBI.subtract(\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n        MINIMUM_LIQUIDITY\n      )\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: CurrencyAmount<Token>,\n    liquidity: CurrencyAmount<Token>,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: CurrencyAmount<Token>\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = JSBI.BigInt(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return CurrencyAmount.fromRawAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\n    )\n  }\n}\n","import { keccak256, pack } from '@ethersproject/solidity'\n\nimport { INIT_CODE_HASH } from '../constants'\nimport { Token } from '../entities'\nimport { getCreate2Address } from '@ethersproject/address'\n\nexport const computePairAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB\n}: {\n  factoryAddress: string\n  tokenA: Token\n  tokenB: Token\n}): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n  return getCreate2Address(\n    factoryAddress,\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\n    INIT_CODE_HASH\n  )\n}\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\n\nimport { BigintIsh } from '../types'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport JSBI from 'jsbi'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport { computePairAddress } from '../functions/computePairAddress'\nimport invariant from 'tiny-invariant'\nimport { sqrt } from '../functions/sqrt'\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    return computePairAddress({\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n      tokenA,\n      tokenB\n    })\n  }\n\n  public constructor(currencyAmountA: CurrencyAmount<Token>, currencyAmountB: CurrencyAmount<Token>) {\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\n      ? [currencyAmountA, currencyAmountB]\n      : [currencyAmountB, currencyAmountA]\n    this.liquidityToken = new Token(\n      currencyAmounts[0].currency.chainId,\n      Pair.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency),\n      18,\n      'UNI-V2',\n      'Uniswap V2'\n    )\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price<Token, Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): number {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].currency\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].currency\n  }\n\n  public get reserve0(): CurrencyAmount<Token> {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): CurrencyAmount<Token> {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency)\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\n    const outputAmount = CurrencyAmount.fromRawAmount(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.currency)\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\n    const inputAmount = CurrencyAmount.fromRawAmount(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: CurrencyAmount<Token>,\n    tokenAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ): CurrencyAmount<Token> {\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\n      liquidity = JSBI.subtract(\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n        MINIMUM_LIQUIDITY\n      )\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: CurrencyAmount<Token>,\n    liquidity: CurrencyAmount<Token>,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: CurrencyAmount<Token>\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = JSBI.BigInt(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return CurrencyAmount.fromRawAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\n    )\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Currency } from './Currency'\nimport { Pair } from './Pair'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\nexport class Route<TInput extends Currency, TOutput extends Currency> {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: TInput\n  public readonly output: TOutput\n\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\n    invariant(pairs.length > 0, 'PAIRS')\n    const chainId: number = pairs[0].chainId\n    invariant(\n      pairs.every(pair => pair.chainId === chainId),\n      'CHAIN_IDS'\n    )\n\n    const wrappedInput = input.wrapped\n    invariant(pairs[0].involvesToken(wrappedInput), 'INPUT')\n    invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT')\n\n    const path: Token[] = [wrappedInput]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.input = input\n    this.output = output\n  }\n\n  private _midPrice: Price<TInput, TOutput> | null = null\n\n  public get midPrice(): Price<TInput, TOutput> {\n    if (this._midPrice !== null) return this._midPrice\n    const prices: Price<Currency, Currency>[] = []\n    for (const [i, pair] of this.pairs.entries()) {\n      prices.push(\n        this.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient)\n      )\n    }\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n    return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator))\n  }\n\n  public get chainId(): number {\n    return this.pairs[0].chainId\n  }\n}\n","import { Currency } from '../entities/Currency'\nimport { CurrencyAmount } from '../entities/CurrencyAmount'\nimport { Percent } from '../entities/Percent'\nimport { Price } from '../entities/Price'\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import { ONE, ZERO } from '../constants'\n\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport { Pair } from './Pair'\nimport { Percent } from './Percent'\nimport { Price } from './Price'\nimport { Route } from './Route'\nimport { Token } from './Token'\nimport { TradeType } from '../enums'\nimport { computePriceImpact } from '../functions/computePriceImpact'\nimport invariant from 'tiny-invariant'\nimport { sortedInsert } from '../functions/sortedInsert'\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\n  readonly inputAmount: CurrencyAmount<TInput>\n  readonly outputAmount: CurrencyAmount<TOutput>\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator<TInput extends Currency, TOutput extends Currency>(\n  a: InputOutput<TInput, TOutput>,\n  b: InputOutput<TInput, TOutput>\n): number {\n  // must have same input and output token for comparison\n  invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n  a: Trade<TInput, TOutput, TTradeType>,\n  b: Trade<TInput, TOutput, TTradeType>\n) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\n   */\n  public readonly route: Route<TInput, TOutput>\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TTradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount<TInput>\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount<TOutput>\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price<TInput, TOutput>\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountIn: CurrencyAmount<TInput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountOut: CurrencyAmount<TOutput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(\n    route: Route<TInput, TOutput>,\n    amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\n    tradeType: TTradeType\n  ) {\n    this.route = route\n    this.tradeType = tradeType\n\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(amount.currency.equals(route.input), 'INPUT')\n      tokenAmounts[0] = amount.wrapped\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i])\n        tokenAmounts[i + 1] = outputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\n        route.output,\n        tokenAmounts[tokenAmounts.length - 1].numerator,\n        tokenAmounts[tokenAmounts.length - 1].denominator\n      )\n    } else {\n      invariant(amount.currency.equals(route.output), 'OUTPUT')\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i])\n        tokenAmounts[i - 1] = inputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\n        route.input,\n        tokenAmounts[0].numerator,\n        tokenAmounts[0].denominator\n      )\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\n    }\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.quotient,\n      this.outputAmount.quotient\n    )\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.quotient).quotient\n      return CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.quotient)\n        .quotient\n      return CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param nextAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount<TInput>,\n    currencyOut: TOutput,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountIn === nextAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountIn = nextAmountIn.wrapped\n    const tokenOut = currencyOut.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: CurrencyAmount<Token>\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.currency.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut),\n            currencyAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          currencyAmountIn,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          amountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * Return the execution price after accounting for slippage tolerance\n   * @param slippageTolerance the allowed tolerated slippage\n   */\n  public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\n    return new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.maximumAmountIn(slippageTolerance).quotient,\n      this.minimumAmountOut(slippageTolerance).quotient\n    )\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param nextAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyIn: TInput,\n    currencyAmountOut: CurrencyAmount<TOutput>,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountOut === nextAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountOut = nextAmountOut.wrapped\n    const tokenIn = currencyIn.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: CurrencyAmount<Token>\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.currency.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency),\n            currencyAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          currencyAmountOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          amountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\nexport interface RToken {\n  name: string\n  address: string\n}\n\nexport enum PoolType {\n  ConstantProduct = 'ConstantProduct',\n  Weighted = 'Weighted',\n  Hybrid = 'Hybrid',\n  ConcentratedLiquidity = 'ConcentratedLiquidity'\n}\n\nexport interface PoolInfo {\n  address: string\n  token0: RToken\n  token1: RToken\n  type: PoolType\n  reserve0: BigNumber\n  reserve1: BigNumber\n  fee: number\n  minLiquidity: number\n  swapGasCost: number\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\ntype PoolInfoWithDefaults = PartialBy<PoolInfo, 'minLiquidity' | 'swapGasCost'>\n\nexport class Pool {\n  address: string\n  token0: RToken\n  token1: RToken\n  type: PoolType\n  reserve0: BigNumber\n  reserve1: BigNumber\n  fee: number\n  minLiquidity: number\n  swapGasCost: number\n\n  constructor(_info: PoolInfoWithDefaults) {\n    const info = {\n      minLiquidity: 1000,\n      swapGasCost: 40_000,\n      ..._info\n    }\n    this.address = info.address\n    this.token0 = info.token0\n    this.token1 = info.token1\n    this.type = info.type\n    this.reserve0 = info.reserve0\n    this.reserve1 = info.reserve1\n    this.fee = info.fee\n    this.minLiquidity = info.minLiquidity\n    this.swapGasCost = info.swapGasCost\n  }\n}\n\ntype PoolInfoNoType = Omit<PoolInfoWithDefaults, 'type'>\n\nexport class RConstantProductPool extends Pool {\n  constructor(info: PoolInfoNoType) {\n    super({\n      type: PoolType.ConstantProduct,\n      ...info\n    })\n  }\n}\n\ntype HybridPoolInfo = PoolInfoNoType & { A: number }\n\nexport class RHybridPool extends Pool {\n  A: number\n  constructor(info: HybridPoolInfo) {\n    super({\n      type: PoolType.Hybrid,\n      ...info\n    })\n    this.A = info.A\n  }\n}\n\ntype WeightedPoolInfo = PoolInfoNoType & { weight0: number; weight1: number }\n\nexport class RWeightedPool extends Pool {\n  weight0: number\n  weight1: number\n  constructor(info: WeightedPoolInfo) {\n    super({\n      type: PoolType.Weighted,\n      ...info\n    })\n    this.weight0 = info.weight0\n    this.weight1 = info.weight1\n  }\n}\n\nexport const CL_MIN_TICK = -887272\nexport const CL_MAX_TICK = -CL_MIN_TICK - 1\ninterface CLTick {\n  index: number\n  DLiquidity: number\n}\n\ninterface CLSpecific {\n  liquidity: number\n  sqrtPrice: number\n  nearestTick: number\n  ticks: CLTick[]\n}\n\ntype CLPoolInfo = Omit<PoolInfoNoType, 'reserve0' | 'reserve1'> & CLSpecific\n\nexport class RConcentratedLiquidityPool extends Pool {\n  liquidity: number\n  sqrtPrice: number\n  nearestTick: number\n  ticks: CLTick[]\n  constructor(info: CLPoolInfo) {\n    super({\n      type: PoolType.ConcentratedLiquidity,\n      reserve0: BigNumber.from(0),\n      reserve1: BigNumber.from(0),\n      ...info\n    })\n    this.liquidity = info.liquidity\n    this.sqrtPrice = info.sqrtPrice\n    this.nearestTick = info.nearestTick\n    this.ticks = info.ticks\n  }\n}\n\nexport interface RouteLeg {\n  address: string\n  token: RToken\n  swapPortion: number // For router contract\n  absolutePortion: number // To depict at webpage for user\n}\n\nexport enum RouteStatus {\n  Success = 'Success',\n  NoWay = 'NoWay',\n  Partial = 'Partial'\n}\nexport interface MultiRoute {\n  status: RouteStatus\n  amountIn: number\n  amountOut: number\n  legs: RouteLeg[]\n  gasSpent: number\n  totalAmountOut: number\n}\n","export const types = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n  ],\n  LimitOrder: [\n    { name: 'maker', type: 'address' },\n    { name: 'tokenIn', type: 'address' },\n    { name: 'tokenOut', type: 'address' },\n    { name: 'amountIn', type: 'uint256' },\n    { name: 'amountOut', type: 'uint256' },\n    { name: 'recipient', type: 'address' },\n    { name: 'startTime', type: 'uint256' },\n    { name: 'endTime', type: 'uint256' },\n    { name: 'stopPrice', type: 'uint256' },\n    { name: 'oracleAddress', type: 'address' },\n    { name: 'oracleData', type: 'bytes32' }\n  ]\n}\n\nexport const bentoTypes = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' }\n  ],\n  SetMasterContractApproval: [\n    { name: 'warning', type: 'string' },\n    { name: 'user', type: 'address' },\n    { name: 'masterContract', type: 'address' },\n    { name: 'approved', type: 'bool' },\n    { name: 'nonce', type: 'uint256' }\n  ]\n}\nexport const name = 'LimitOrder'\n","import { BENTOBOX_ADDRESS, STOP_LIMIT_ORDER_ADDRESS } from '../constants'\nimport { bentoTypes, name, types } from '../types'\n\nimport { ChainId } from 'enums'\nimport { SigningKey } from '@ethersproject/signing-key'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { getMessage } from 'eip-712'\nimport { splitSignature } from '@ethersproject/bytes'\n\nexport interface Domain {\n  name: string\n  chainId: ChainId\n  verifyingContract: string\n}\n\nexport interface Message {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string\n  endTime: string\n  stopPrice: string\n  oracleAddress: string\n  oracleData: string\n}\n\nexport interface BentoApprovalMessage {\n  warning: string\n  user: string\n  masterContract: string\n  approved: boolean\n  nonce: number\n}\n\nexport const getSignature = (message: Message, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  }\n  return sign({ types, primaryType: 'LimitOrder', domain, message }, privateKey)\n}\n\nexport const getTypedData = (message: Message, chainId: ChainId) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  }\n  return { types, primaryType: 'LimitOrder', domain, message }\n}\n\nexport const getTypedDataBento = (message: BentoApprovalMessage, chainId: ChainId) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  }\n  return {\n    types: bentoTypes,\n    primaryType: 'SetMasterContractApproval',\n    domain,\n    message\n  }\n}\n\nexport const getTypeHash = (typedData: any) => {\n  let message = getMessage(typedData, true).toString('hex')\n  return `0x${message}`\n}\n\nconst sign = (typedData: any, privateKey: string) => {\n  let message = getMessage(typedData, true)\n  const signingKey = new SigningKey(privateKey)\n  const { v, r, s } = signingKey.signDigest(message)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProvider = async (\n  message: Message,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedData(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.maker, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureWithProviderBentobox = async (\n  message: BentoApprovalMessage,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedDataBento(message, chainId)\n  const signature = await provider.send('eth_signTypedData_v4', [message.user, JSON.stringify(typedData)])\n  const { v, r, s } = splitSignature(signature)\n  return { v, r, s }\n}\n\nexport const getSignatureBento = async (bentoApproval: BentoApprovalMessage, chainId: ChainId, privateKey: string) => {\n  let domain: Domain = {\n    name: 'BentoBox V1',\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  }\n  return sign(\n    {\n      types: bentoTypes,\n      primaryType: 'SetMasterContractApproval',\n      domain,\n      message: bentoApproval\n    },\n    privateKey\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport {\n  Pool,\n  PoolType,\n  RHybridPool,\n  RWeightedPool,\n  RConcentratedLiquidityPool,\n  CL_MIN_TICK,\n  CL_MAX_TICK\n} from '../types/MultiRouterTypes'\n\nconst A_PRECISION = 100\n\nconst DCacheBN = new Map<Pool, BigNumber>()\nexport function HybridComputeLiquidity(pool: RHybridPool): BigNumber {\n  const res = DCacheBN.get(pool)\n  if (res !== undefined) return res\n\n  const r0 = pool.reserve0\n  const r1 = pool.reserve1\n\n  if (r0.isZero() && r1.isZero()) {\n    DCacheBN.set(pool, BigNumber.from(0))\n    return BigNumber.from(0)\n  }\n  const s = r0.add(r1)\n\n  const nA = BigNumber.from(pool.A * 2)\n\n  let prevD\n\n  let D = s\n  for (let i = 0; i < 256; i++) {\n    const dP = D.mul(D)\n      .div(r0)\n      .mul(D)\n      .div(r1)\n      .div(4)\n    prevD = D\n    D = nA\n      .mul(s)\n      .div(A_PRECISION)\n      .add(dP.mul(2))\n      .mul(D)\n      .div(\n        nA\n          .div(A_PRECISION)\n          .sub(1)\n          .mul(D)\n          .add(dP.mul(3))\n      )\n    if (\n      D.sub(prevD)\n        .abs()\n        .lte(1)\n    ) {\n      break\n    }\n  }\n  DCacheBN.set(pool, D)\n  return D\n}\n\nexport function HybridgetY(pool: RHybridPool, x: BigNumber): BigNumber {\n  const D = HybridComputeLiquidity(pool)\n\n  const nA = pool.A * 2\n\n  let c = D.mul(D)\n    .div(x.mul(2))\n    .mul(D)\n    .div((nA * 2) / A_PRECISION)\n  let b = D.mul(A_PRECISION)\n    .div(nA)\n    .add(x)\n\n  let yPrev\n  let y = D\n  for (let i = 0; i < 256; i++) {\n    yPrev = y\n\n    y = y\n      .mul(y)\n      .add(c)\n      .div(\n        y\n          .mul(2)\n          .add(b)\n          .sub(D)\n      )\n    if (\n      y\n        .sub(yPrev)\n        .abs()\n        .lte(1)\n    ) {\n      break\n    }\n  }\n  return y\n}\n\nexport function calcOutByIn(pool: Pool, amountIn: number, direction = true): number {\n  const xBN = direction ? pool.reserve0 : pool.reserve1\n  const yBN = direction ? pool.reserve1 : pool.reserve0\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      return (y * amountIn) / (x / (1 - pool.fee) + amountIn)\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      const wPool = pool as RWeightedPool\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\n      const actualIn = amountIn * (1 - pool.fee)\n      const out = y * (1 - Math.pow(x / (x + actualIn), weightRatio))\n      return out\n    }\n    case PoolType.Hybrid: {\n      // const xNew = x + amountIn*(1-pool.fee);\n      // const yNew = HybridgetY(pool, xNew);\n      // const dy = y - yNew;\n\n      const xNewBN = xBN.add(getBigNumber(undefined, amountIn * (1 - pool.fee)))\n      const yNewBN = HybridgetY(pool as RHybridPool, xNewBN)\n      const dy = parseInt(yBN.sub(yNewBN).toString())\n\n      return dy\n    }\n    case PoolType.ConcentratedLiquidity: {\n      return ConcentratedLiquidityOutByIn(pool as RConcentratedLiquidityPool, amountIn, direction)\n    }\n  }\n}\n\nexport class OutOfLiquidity extends Error {}\n\nfunction ConcentratedLiquidityOutByIn(pool: RConcentratedLiquidityPool, inAmount: number, direction: boolean) {\n  if (pool.ticks.length === 0) return 0\n  if (pool.ticks[0].index > CL_MIN_TICK) pool.ticks.unshift({ index: CL_MIN_TICK, DLiquidity: 0 })\n  if (pool.ticks[pool.ticks.length - 1].index < CL_MAX_TICK) pool.ticks.push({ index: CL_MAX_TICK, DLiquidity: 0 })\n\n  let nextTickToCross = direction ? pool.nearestTick : pool.nearestTick + 1\n  let currentPrice = pool.sqrtPrice\n  let currentLiquidity = pool.liquidity\n  let outAmount = 0\n  let input = inAmount\n\n  while (input > 0) {\n    if (nextTickToCross < 0 || nextTickToCross >= pool.ticks.length) throw new OutOfLiquidity()\n\n    const nextTickPrice = Math.sqrt(Math.pow(1.0001, pool.ticks[nextTickToCross].index))\n    // console.log('L, P, tick, nextP', currentLiquidity,\n    //     currentPrice, pool.ticks[nextTickToCross].index, nextTickPrice);\n    let output = 0\n\n    if (direction) {\n      const maxDx = (currentLiquidity * (currentPrice - nextTickPrice)) / currentPrice / nextTickPrice\n      //console.log('input, maxDx', input, maxDx);\n\n      if (input <= maxDx) {\n        output = (currentLiquidity * currentPrice * input) / (input + currentLiquidity / currentPrice)\n        input = 0\n      } else {\n        output = currentLiquidity * (currentPrice - nextTickPrice)\n        currentPrice = nextTickPrice\n        input -= maxDx\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\n        } else {\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\n        }\n        nextTickToCross--\n      }\n    } else {\n      const maxDy = currentLiquidity * (nextTickPrice - currentPrice)\n      //console.log('input, maxDy', input, maxDy);\n      if (input <= maxDy) {\n        output = input / currentPrice / (currentPrice + input / currentLiquidity)\n        input = 0\n      } else {\n        output = (currentLiquidity * (nextTickPrice - currentPrice)) / currentPrice / nextTickPrice\n        currentPrice = nextTickPrice\n        input -= maxDy\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\n        } else {\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\n        }\n        nextTickToCross++\n      }\n    }\n\n    outAmount += output * (1 - pool.fee)\n    //console.log('out', outAmount);\n  }\n\n  return outAmount\n}\n\nexport function calcInByOut(pool: Pool, amountOut: number, direction: boolean): number {\n  let input = 0\n  const xBN = direction ? pool.reserve0 : pool.reserve1\n  const yBN = direction ? pool.reserve1 : pool.reserve0\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      input = (x * amountOut) / (1 - pool.fee) / (y - amountOut)\n      break\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString())\n      const y = parseInt(yBN.toString())\n      const wPool = pool as RWeightedPool\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\n      input = x * (1 - pool.fee) * (Math.pow(1 - amountOut / y, -weightRatio) - 1)\n      break\n    }\n    case PoolType.Hybrid: {\n      let yNewBN = yBN.sub(getBigNumber(undefined, amountOut))\n      if (yNewBN.lt(1))\n        // lack of precision\n        yNewBN = BigNumber.from(1)\n\n      const xNewBN = HybridgetY(pool as RHybridPool, yNewBN)\n      input = Math.round(parseInt(xNewBN.sub(xBN).toString()) / (1 - pool.fee))\n\n      // const yNew = y - amountOut;\n      // const xNew = HybridgetY(pool, yNew);\n      // input = (xNew - x)/(1-pool.fee);\n      break\n    }\n    default:\n      console.error('Unknown pool type')\n  }\n\n  // ASSERT(() => {\n  //   const amount2 = calcOutByIn(pool, input, direction);\n  //   const res = closeValues(amountOut, amount2, 1e-6);\n  //   if (!res) console.log(\"Error 138:\", amountOut, amount2, Math.abs(amountOut/amount2 - 1));\n  //   return res;\n  // });\n  if (input < 1) input = 1\n  return input\n}\n\nexport function calcPrice(pool: Pool, amountIn: number, takeFeeIntoAccount = true): number {\n  const r0 = parseInt(pool.reserve0.toString())\n  const r1 = parseInt(pool.reserve1.toString())\n  const oneMinusFee = takeFeeIntoAccount ? 1 - pool.fee : 1\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = r0 / oneMinusFee\n      return (r1 * x) / (x + amountIn) / (x + amountIn)\n    }\n    case PoolType.Weighted: {\n      const wPool = pool as RWeightedPool\n      const weightRatio = wPool.weight0 / wPool.weight1\n      const x = r0 + amountIn * oneMinusFee\n      return (r1 * weightRatio * oneMinusFee * Math.pow(r0 / x, weightRatio)) / x\n    }\n    case PoolType.Hybrid: {\n      const hPool = pool as RHybridPool\n      const D = parseInt(HybridComputeLiquidity(hPool).toString())\n      const A = hPool.A / A_PRECISION\n      const x = r0 + amountIn\n      const b = 4 * A * x + D - 4 * A * D\n      const ac4 = (D * D * D) / x\n      const Ds = Math.sqrt(b * b + 4 * A * ac4)\n      const res = (0.5 - (2 * b - ac4 / x) / Ds / 4) * oneMinusFee\n      return res\n    }\n  }\n  return 0\n}\n\nfunction calcInputByPriceConstantMean(pool: RWeightedPool, price: number) {\n  const r0 = parseInt(pool.reserve0.toString())\n  const r1 = parseInt(pool.reserve1.toString())\n  const weightRatio = pool.weight0 / pool.weight1\n  const t = r1 * price * weightRatio * (1 - pool.fee) * Math.pow(r0, weightRatio)\n  return (Math.pow(t, 1 / (weightRatio + 1)) - r0) / (1 - pool.fee)\n}\n\nexport function calcInputByPrice(pool: Pool, priceEffective: number, hint = 1): number {\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const r0 = parseInt(pool.reserve0.toString())\n      const r1 = parseInt(pool.reserve1.toString())\n      const x = r0 / (1 - pool.fee)\n      const res = Math.sqrt(r1 * x * priceEffective) - x\n      return res\n    }\n    case PoolType.Weighted: {\n      const res = calcInputByPriceConstantMean(pool as RWeightedPool, priceEffective)\n      return res\n    }\n    case PoolType.Hybrid: {\n      return revertPositive((x: number) => 1 / calcPrice(pool, x), priceEffective, hint)\n    }\n  }\n  return 0\n}\n\n//================================= Utils ====================================\n\nexport function ASSERT(f: () => boolean, t?: string) {\n  if (!f() && t) console.error(t)\n}\n\nexport function closeValues(a: number, b: number, accuracy: number): boolean {\n  if (accuracy === 0) return a === b\n  if (a < 1 / accuracy) return Math.abs(a - b) <= 10\n  return Math.abs(a / b - 1) < accuracy\n}\n\nexport function calcSquareEquation(a: number, b: number, c: number): [number, number] {\n  const D = b * b - 4 * a * c\n  console.assert(D >= 0, `Discriminant is negative! ${a} ${b} ${c}`)\n  const sqrtD = Math.sqrt(D)\n  return [(-b - sqrtD) / 2 / a, (-b + sqrtD) / 2 / a]\n}\n\n// returns such x > 0 that f(x) = out or 0 if there is no such x or f defined not everywhere\n// hint - approximation of x to spead up the algorithm\n// f assumed to be continues monotone growth function defined everywhere\nexport function revertPositive(f: (x: number) => number, out: number, hint = 1) {\n  try {\n    if (out <= f(0)) return 0\n    let min, max\n    if (f(hint) > out) {\n      min = hint / 2\n      while (f(min) > out) min /= 2\n      max = min * 2\n    } else {\n      max = hint * 2\n      while (f(max) < out) max *= 2\n      min = max / 2\n    }\n\n    while (max / min - 1 > 1e-4) {\n      const x0: number = (min + max) / 2\n      const y0 = f(x0)\n      if (out === y0) return x0\n      if (out < y0) max = x0\n      else min = x0\n    }\n    return (min + max) / 2\n  } catch (e) {\n    return 0\n  }\n}\n\nexport function getBigNumber(valueBN: BigNumber | undefined, value: number): BigNumber {\n  if (valueBN !== undefined) return valueBN\n\n  if (value < Number.MAX_SAFE_INTEGER) return BigNumber.from(Math.round(value))\n\n  const exp = Math.floor(Math.log(value) / Math.LN2)\n  console.assert(exp >= 51, 'Internal Error 314')\n  const shift = exp - 51\n  const mant = Math.round(value / Math.pow(2, shift))\n  const res = BigNumber.from(mant).mul(BigNumber.from(2).pow(shift))\n  return res\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Pool, RToken, RouteLeg, MultiRoute, RouteStatus } from '../types/MultiRouterTypes'\nimport { ASSERT, calcInByOut, calcOutByIn, closeValues, calcPrice } from '../utils/MultiRouterMath'\n\nexport class Edge {\n  readonly GasConsumption = 40_000\n  readonly MINIMUM_LIQUIDITY = 1000\n  pool: Pool\n  vert0: Vertice\n  vert1: Vertice\n\n  canBeUsed: boolean\n  direction: boolean\n  amountInPrevious: number // How many liquidity were passed from vert0 to vert1\n  amountOutPrevious: number // How many liquidity were passed from vert0 to vert1\n  bestEdgeIncome: number // debug data\n\n  constructor(p: Pool, v0: Vertice, v1: Vertice) {\n    this.pool = p\n    this.vert0 = v0\n    this.vert1 = v1\n    this.amountInPrevious = 0\n    this.amountOutPrevious = 0\n    this.canBeUsed = true\n    this.direction = true\n    this.bestEdgeIncome = 0\n  }\n\n  reserve(v: Vertice): BigNumber {\n    return v === this.vert0 ? this.pool.reserve0 : this.pool.reserve1\n  }\n\n  calcOutput(v: Vertice, amountIn: number) {\n    const pool = this.pool\n    let out,\n      gas = this.amountInPrevious ? 0 : this.GasConsumption\n    if (v === this.vert1) {\n      if (this.direction) {\n        if (amountIn < this.amountOutPrevious) {\n          out = this.amountInPrevious - calcInByOut(pool, this.amountOutPrevious - amountIn, true)\n        } else {\n          out = calcOutByIn(pool, amountIn - this.amountOutPrevious, false) + this.amountInPrevious\n        }\n        if (amountIn === this.amountOutPrevious) {\n          // TODO: accuracy?\n          gas = -this.GasConsumption\n        }\n      } else {\n        out = calcOutByIn(pool, this.amountOutPrevious + amountIn, false) - this.amountInPrevious\n      }\n    } else {\n      if (this.direction) {\n        out = calcOutByIn(pool, this.amountInPrevious + amountIn, true) - this.amountOutPrevious\n      } else {\n        if (amountIn === this.amountInPrevious) {\n          // TODO: accuracy?\n          gas = -this.GasConsumption\n        }\n        if (amountIn < this.amountInPrevious) {\n          out = this.amountOutPrevious - calcInByOut(pool, this.amountInPrevious - amountIn, false)\n        } else {\n          out = calcOutByIn(pool, amountIn - this.amountInPrevious, true) + this.amountOutPrevious\n        }\n      }\n    }\n\n    // this.testApply(v, amountIn, out);\n\n    return [out, gas]\n  }\n\n  checkMinimalLiquidityExceededAfterSwap(from: Vertice, amountOut: number): boolean {\n    if (from === this.vert0) {\n      const r1 = parseInt(this.pool.reserve1.toString())\n      if (this.direction) {\n        return r1 - amountOut - this.amountOutPrevious < this.MINIMUM_LIQUIDITY\n      } else {\n        return r1 - amountOut + this.amountOutPrevious < this.MINIMUM_LIQUIDITY\n      }\n    } else {\n      const r0 = parseInt(this.pool.reserve0.toString())\n      if (this.direction) {\n        return r0 - amountOut + this.amountInPrevious < this.MINIMUM_LIQUIDITY\n      } else {\n        return r0 - amountOut - this.amountInPrevious < this.MINIMUM_LIQUIDITY\n      }\n    }\n  }\n\n  // doesn't used in production - just for testing\n  testApply(from: Vertice, amountIn: number, amountOut: number) {\n    console.assert(this.amountInPrevious * this.amountOutPrevious >= 0)\n    const inPrev = this.direction ? this.amountInPrevious : -this.amountInPrevious\n    const outPrev = this.direction ? this.amountOutPrevious : -this.amountOutPrevious\n    const to = from.getNeibour(this)\n    let directionNew,\n      amountInNew = 0,\n      amountOutNew = 0\n    if (to) {\n      const inInc = from === this.vert0 ? amountIn : -amountOut\n      const outInc = from === this.vert0 ? amountOut : -amountIn\n      const inNew = inPrev + inInc\n      const outNew = outPrev + outInc\n      if (inNew * outNew < 0) console.log('333')\n      console.assert(inNew * outNew >= 0)\n      if (inNew >= 0) {\n        directionNew = true\n        amountInNew = inNew\n        amountOutNew = outNew\n      } else {\n        directionNew = false\n        amountInNew = -inNew\n        amountOutNew = -outNew\n      }\n    } else console.error('Error 221')\n\n    if (directionNew) {\n      const calc = calcOutByIn(this.pool, amountInNew, directionNew)\n      const res = closeValues(amountOutNew, calc, 1e-6)\n      if (!res) console.log('Err 225-1 !!', amountOutNew, calc, Math.abs(calc / amountOutNew - 1))\n      return res\n    } else {\n      const calc = calcOutByIn(this.pool, amountOutNew, directionNew)\n      const res = closeValues(amountInNew, calc, 1e-6)\n      if (!res) console.log('Err 225-2!!', amountInNew, calc, Math.abs(calc / amountInNew - 1))\n      return res\n    }\n  }\n\n  applySwap(from: Vertice) {\n    console.assert(this.amountInPrevious * this.amountOutPrevious >= 0)\n    const inPrev = this.direction ? this.amountInPrevious : -this.amountInPrevious\n    const outPrev = this.direction ? this.amountOutPrevious : -this.amountOutPrevious\n    const to = from.getNeibour(this)\n    if (to) {\n      const inInc = from === this.vert0 ? from.bestIncome : -to.bestIncome\n      const outInc = from === this.vert0 ? to.bestIncome : -from.bestIncome\n      const inNew = inPrev + inInc\n      const outNew = outPrev + outInc\n      console.assert(inNew * outNew >= 0)\n      if (inNew >= 0) {\n        this.direction = true\n        this.amountInPrevious = inNew\n        this.amountOutPrevious = outNew\n      } else {\n        this.direction = false\n        this.amountInPrevious = -inNew\n        this.amountOutPrevious = -outNew\n      }\n    } else console.error('Error 221')\n\n    ASSERT(() => {\n      if (this.direction)\n        return closeValues(this.amountOutPrevious, calcOutByIn(this.pool, this.amountInPrevious, this.direction), 1e-6)\n      else {\n        return closeValues(this.amountInPrevious, calcOutByIn(this.pool, this.amountOutPrevious, this.direction), 1e-6)\n      }\n    }, `Error 225`)\n  }\n}\n\nexport class Vertice {\n  token: RToken\n  edges: Edge[]\n\n  price: number\n  gasPrice: number\n\n  bestIncome: number // temp data used for findBestPath algorithm\n  gasSpent: number // temp data used for findBestPath algorithm\n  bestTotal: number // temp data used for findBestPath algorithm\n  bestSource?: Edge // temp data used for findBestPath algorithm\n  checkLine: number // debug data\n\n  constructor(t: RToken) {\n    this.token = t\n    this.edges = []\n    this.price = 0\n    this.gasPrice = 0\n    this.bestIncome = 0\n    this.gasSpent = 0\n    this.bestTotal = 0\n    this.bestSource = undefined\n    this.checkLine = -1\n  }\n\n  getNeibour(e?: Edge) {\n    if (!e) return\n    return e.vert0 === this ? e.vert1 : e.vert0\n  }\n}\n\nexport class Graph {\n  vertices: Vertice[]\n  edges: Edge[]\n  tokens: Map<RToken, Vertice>\n\n  constructor(pools: Pool[], baseToken: RToken, gasPrice: number) {\n    this.vertices = []\n    this.edges = []\n    this.tokens = new Map()\n    pools.forEach(p => {\n      const v0 = this.getOrCreateVertice(p.token0)\n      const v1 = this.getOrCreateVertice(p.token1)\n      const edge = new Edge(p, v0, v1)\n      v0.edges.push(edge)\n      v1.edges.push(edge)\n      this.edges.push(edge)\n    })\n    const baseVert = this.tokens.get(baseToken)\n    if (baseVert) {\n      this.setPrices(baseVert, 1, gasPrice)\n    }\n  }\n\n  setPrices(from: Vertice, price: number, gasPrice: number) {\n    if (from.price !== 0) return\n    from.price = price\n    from.gasPrice = gasPrice\n    const edges = from.edges\n      .map((e): [Edge, number] => [e, parseInt(e.reserve(from).toString())])\n      .sort(([_1, r1], [_2, r2]) => r2 - r1)\n    edges.forEach(([e, _]) => {\n      const v = e.vert0 === from ? e.vert1 : e.vert0\n      if (v.price !== 0) return\n      let p = calcPrice(e.pool, 0, false)\n      if (from === e.vert0) p = 1 / p\n      this.setPrices(v, price * p, gasPrice / p)\n    })\n  }\n\n  getOrCreateVertice(token: RToken) {\n    let vert = this.tokens.get(token)\n    if (vert) return vert\n    vert = new Vertice(token)\n    this.vertices.push(vert)\n    this.tokens.set(token, vert)\n    return vert\n  }\n\n  exportPath(from: RToken, to: RToken) {\n    //}, _route: MultiRoute) {\n    // const allPools = new Map<string, Pool>();\n    // this.edges.forEach(p => allPools.set(p.address, p));\n    // const usedPools = new Map<string, boolean>();\n    // route.legs.forEach(l => usedPools.set(l.address, l.token === allPools.get(l.address)?.token0))\n\n    const fromVert = this.tokens.get(from) as Vertice\n    const toVert = this.tokens.get(to) as Vertice\n    const initValue = (fromVert.bestIncome * fromVert.price) / toVert.price\n\n    const route = new Set<Edge>()\n    for (let v = toVert; v !== fromVert; v = v.getNeibour(v.bestSource) as Vertice) {\n      if (v.bestSource) route.add(v.bestSource)\n    }\n\n    function edgeStyle(e: Edge) {\n      const finish = e.vert1.bestSource === e\n      const start = e.vert0.bestSource === e\n      let label\n      if (e.bestEdgeIncome === -1) label = 'label: \"low_liq\"'\n      if (e.bestEdgeIncome !== 0) label = `label: \"${print((e.bestEdgeIncome / initValue - 1) * 100, 3)}%\"`\n      const edgeValue = route.has(e) ? 'value: 2' : undefined\n      let arrow\n      if (finish && start) arrow = 'arrows: \"from,to\"'\n      if (finish) arrow = 'arrows: \"to\"'\n      if (start) arrow = 'arrows: \"from\"'\n      return ['', label, edgeValue, arrow].filter(a => a !== undefined).join(', ')\n    }\n\n    function print(n: number, digits: number) {\n      let out\n      if (n === 0) out = '0'\n      else {\n        const n0 = n > 0 ? n : -n\n        const shift = digits - Math.ceil(Math.log(n0) / Math.LN10)\n        if (shift <= 0) out = `${Math.round(n0)}`\n        else {\n          const mult = Math.pow(10, shift)\n          out = `${Math.round(n0 * mult) / mult}`\n        }\n        if (n < 0) out = -out\n      }\n      return out\n    }\n\n    function nodeLabel(v: Vertice) {\n      const value = (v.bestIncome * v.price) / toVert.price\n      const income = `${print(value, 3)}`\n      const total = `${print(v.bestTotal, 3)}`\n      // const income = `${print((value/initValue-1)*100, 3)}%`\n      // const total = `${print((v.bestTotal/initValue-1)*100, 3)}%`\n      const checkLine = v.checkLine === -1 ? undefined : `${v.checkLine}`\n      return [checkLine, income, total].filter(a => a !== undefined).join(':')\n    }\n\n    const nodes = `var nodes = new vis.DataSet([\n      ${this.vertices.map(t => `{ id: ${t.token.name}, label: \"${nodeLabel(t)}\"}`).join(',\\n\\t\\t')}\n    ]);\\n`\n    const edges = `var edges = new vis.DataSet([\n      ${this.edges.map(p => `{ from: ${p.vert0.token.name}, to: ${p.vert1.token.name}${edgeStyle(p)}}`).join(',\\n\\t\\t')}\n    ]);\\n`\n    const data = `var data = {\n        nodes: nodes,\n        edges: edges,\n    };\\n`\n\n    const fs = require('fs')\n    fs.writeFileSync('D:/Info/Notes/GraphVisualization/data.js', nodes + edges + data)\n  }\n\n  findBestPath(\n    from: RToken,\n    to: RToken,\n    amountIn: number\n  ):\n    | {\n        path: Edge[]\n        output: number\n        gasSpent: number\n        totalOutput: number\n      }\n    | undefined {\n    const start = this.tokens.get(from)\n    const finish = this.tokens.get(to)\n    if (!start || !finish) return\n\n    this.edges.forEach(e => (e.bestEdgeIncome = 0))\n    this.vertices.forEach(v => {\n      v.bestIncome = 0\n      v.gasSpent = 0\n      v.bestTotal = 0\n      v.bestSource = undefined\n      v.checkLine = -1\n    })\n    start.bestIncome = amountIn\n    start.bestTotal = amountIn\n    const processedVert = new Set<Vertice>()\n    const nextVertList = [start] // TODO: Use sorted Set!\n\n    let checkLine = 0\n    for (;;) {\n      let closestVert: Vertice | undefined\n      let closestTotal = -1\n      let closestPosition = 0\n      nextVertList.forEach((v, i) => {\n        if (v.bestTotal > closestTotal) {\n          closestTotal = v.bestTotal\n          closestVert = v\n          closestPosition = i\n        }\n      })\n\n      if (!closestVert) return\n\n      closestVert.checkLine = checkLine++\n\n      if (closestVert === finish) {\n        const bestPath = []\n        for (let v: Vertice | undefined = finish; v?.bestSource; v = v.getNeibour(v.bestSource)) {\n          bestPath.unshift(v.bestSource)\n        }\n        return {\n          path: bestPath,\n          output: finish.bestIncome,\n          gasSpent: finish.gasSpent,\n          totalOutput: finish.bestTotal\n        }\n      }\n      nextVertList.splice(closestPosition, 1)\n\n      closestVert.edges.forEach(e => {\n        const v2 = closestVert === e.vert0 ? e.vert1 : e.vert0\n        if (processedVert.has(v2)) return\n        let newIncome, gas\n        try {\n          ;[newIncome, gas] = e.calcOutput(closestVert as Vertice, (closestVert as Vertice).bestIncome)\n        } catch (e) {\n          // Any arithmetic error or out-of-liquidity\n          return\n        }\n        if (e.checkMinimalLiquidityExceededAfterSwap(closestVert as Vertice, newIncome)) {\n          e.bestEdgeIncome = -1\n          return\n        }\n        const newGasSpent = (closestVert as Vertice).gasSpent + gas\n        const price = v2.price / finish.price\n        const newTotal = newIncome * price - newGasSpent * finish.gasPrice\n\n        console.assert(e.bestEdgeIncome === 0, 'Error 373')\n        e.bestEdgeIncome = newIncome * price\n\n        if (!v2.bestSource) nextVertList.push(v2)\n        if (!v2.bestSource || newTotal > v2.bestTotal) {\n          v2.bestIncome = newIncome\n          v2.gasSpent = newGasSpent\n          v2.bestTotal = newTotal\n          v2.bestSource = e\n        }\n      })\n      processedVert.add(closestVert)\n    }\n  }\n\n  addPath(from: Vertice | undefined, to: Vertice | undefined, path: Edge[]) {\n    let _from = from\n    path.forEach(e => {\n      if (_from) {\n        e.applySwap(_from)\n        _from = _from.getNeibour(e)\n      } else {\n        console.error('Unexpected 315')\n      }\n    })\n\n    ASSERT(() => {\n      const res = this.vertices.every(v => {\n        let total = 0\n        let totalModule = 0\n        v.edges.forEach(e => {\n          if (e.vert0 === v) {\n            if (e.direction) {\n              total -= e.amountInPrevious\n            } else {\n              total += e.amountInPrevious\n            }\n            totalModule += e.amountInPrevious\n          } else {\n            if (e.direction) {\n              total += e.amountOutPrevious\n            } else {\n              total -= e.amountOutPrevious\n            }\n            totalModule += e.amountOutPrevious\n          }\n        })\n        if (v === from) return total <= 0\n        if (v === to) return total >= 0\n        if (totalModule === 0) return total === 0\n        return Math.abs(total / totalModule) < 1e10\n      })\n      return res\n    }, 'Error 290')\n  }\n\n  findBestRoute(from: RToken, to: RToken, amountIn: number, mode: number | number[]): MultiRoute {\n    let routeValues = []\n    if (Array.isArray(mode)) {\n      const sum = mode.reduce((a, b) => a + b, 0)\n      routeValues = mode.map(e => e / sum)\n    } else {\n      for (let i = 0; i < mode; ++i) routeValues.push(1 / mode)\n    }\n\n    this.edges.forEach(e => {\n      e.amountInPrevious = 0\n      e.amountOutPrevious = 0\n      e.direction = true\n    })\n    let output = 0\n    let gasSpentInit = 0\n    //let totalOutput = 0\n    let totalrouted = 0\n    let step\n    for (step = 0; step < routeValues.length; ++step) {\n      const p = this.findBestPath(from, to, amountIn * routeValues[step])\n      if (!p) {\n        break\n      } else {\n        output += p.output\n        gasSpentInit += p.gasSpent\n        //totalOutput += p.totalOutput\n        this.addPath(this.tokens.get(from), this.tokens.get(to), p.path)\n        totalrouted += routeValues[step]\n      }\n    }\n    if (step == 0)\n      return {\n        status: RouteStatus.NoWay,\n        amountIn: 0,\n        amountOut: 0,\n        legs: [],\n        gasSpent: 0,\n        totalAmountOut: 0\n      }\n    let status\n    if (step < routeValues.length) status = RouteStatus.Partial\n    else status = RouteStatus.Success\n\n    const fromVert = this.tokens.get(from) as Vertice\n    const toVert = this.tokens.get(to) as Vertice\n    const [legs, gasSpent, topologyWasChanged] = this.getRouteLegs(fromVert, toVert)\n    console.assert(gasSpent <= gasSpentInit, 'Internal Error 491')\n\n    if (topologyWasChanged) {\n      output = this.calcLegsAmountOut(legs, amountIn, to)\n    }\n\n    return {\n      status,\n      amountIn: amountIn * totalrouted,\n      amountOut: output,\n      legs,\n      gasSpent,\n      totalAmountOut: output - gasSpent * toVert.gasPrice\n    }\n  }\n\n  getRouteLegs(from: Vertice, to: Vertice): [RouteLeg[], number, boolean] {\n    const [nodes, topologyWasChanged] = this.cleanTopology(from, to)\n    const legs: RouteLeg[] = []\n    let gasSpent = 0\n    nodes.forEach(n => {\n      const outEdges = this.getOutputEdges(n).map(e => {\n        const from = this.edgeFrom(e)\n        return from ? [e, from[0], from[1]] : [e]\n      })\n\n      let outAmount = outEdges.reduce((a, b) => a + (b[2] as number), 0)\n      if (outAmount <= 0) return\n\n      const total = outAmount\n      outEdges.forEach((e, i) => {\n        const p = e[2] as number\n        const quantity = i + 1 === outEdges.length ? 1 : p / outAmount\n        legs.push({\n          address: (e[0] as Edge).pool.address,\n          token: n.token,\n          swapPortion: quantity,\n          absolutePortion: p / total\n        })\n        gasSpent += (e[0] as Edge).pool.swapGasCost\n        outAmount -= p\n      })\n      console.assert(outAmount / total < 1e-12, 'Error 281')\n    })\n    return [legs, gasSpent, topologyWasChanged]\n  }\n\n  edgeFrom(e: Edge): [Vertice, number] | undefined {\n    if (e.amountInPrevious === 0) return undefined\n    return e.direction ? [e.vert0, e.amountInPrevious] : [e.vert1, e.amountOutPrevious]\n  }\n\n  getOutputEdges(v: Vertice): Edge[] {\n    return v.edges.filter(e => {\n      if (!e.canBeUsed) return false\n      if (e.amountInPrevious === 0) return false\n      if (e.direction !== (e.vert0 === v)) return false\n      return true\n    })\n  }\n\n  getInputEdges(v: Vertice): Edge[] {\n    return v.edges.filter(e => {\n      if (!e.canBeUsed) return false\n      if (e.amountInPrevious === 0) return false\n      if (e.direction === (e.vert0 === v)) return false\n      return true\n    })\n  }\n\n  calcLegsAmountOut(legs: RouteLeg[], amountIn: number, to: RToken) {\n    const amounts = new Map<RToken, number>()\n    amounts.set(legs[0].token, amountIn)\n    legs.forEach(l => {\n      const vert = this.tokens.get(l.token)\n      console.assert(vert !== undefined, 'Internal Error 570')\n      const edge = (vert as Vertice).edges.find(e => e.pool.address === l.address)\n      console.assert(edge !== undefined, 'Internel Error 569')\n      const pool = (edge as Edge).pool\n      const direction = vert === (edge as Edge).vert0\n\n      const inputTotal = amounts.get(l.token)\n      console.assert(inputTotal !== undefined, 'Internal Error 564')\n      const input = (inputTotal as number) * l.swapPortion\n      amounts.set(l.token, (inputTotal as number) - input)\n      const output = calcOutByIn(pool, input, direction)\n\n      const vertNext = (vert as Vertice).getNeibour(edge) as Vertice\n      const prevAmount = amounts.get(vertNext.token)\n      amounts.set(vertNext.token, (prevAmount || 0) + output)\n    })\n    return amounts.get(to) || 0\n  }\n\n  // removes all cycles if there are any, then removes all dead end could appear after cycle removing\n  // Returns clean result topologically sorted\n  cleanTopology(from: Vertice, to: Vertice): [Vertice[], boolean] {\n    let topologyWasChanged = false\n    let result = this.topologySort(from, to)\n    if (result[0] !== 2) {\n      topologyWasChanged = true\n      console.assert(result[0] === 0, 'Internal Error 554')\n      while (result[0] === 0) {\n        this.removeWeakestEdge(result[1])\n        result = this.topologySort(from, to)\n      }\n      if (result[0] === 3) {\n        this.removeDeadEnds(result[1])\n        result = this.topologySort(from, to)\n      }\n      console.assert(result[0] === 2, 'Internal Error 563')\n      if (result[0] !== 2) return [[], topologyWasChanged]\n    }\n    return [result[1], topologyWasChanged]\n  }\n\n  removeDeadEnds(verts: Vertice[]) {\n    verts.forEach(v => {\n      this.getInputEdges(v).forEach(e => {\n        e.canBeUsed = false\n      })\n    })\n  }\n\n  removeWeakestEdge(verts: Vertice[]) {\n    let minVert: Vertice, minVertNext: Vertice\n    let minOutput = Number.MAX_VALUE\n    verts.forEach((v1, i) => {\n      const v2 = i === 0 ? verts[verts.length - 1] : verts[i - 1]\n      let out = 0\n      this.getOutputEdges(v1).forEach(e => {\n        if (v1.getNeibour(e) !== v2) return\n        out += e.direction ? e.amountOutPrevious : e.amountInPrevious\n      })\n      if (out < minOutput) {\n        minVert = v1\n        minVertNext = v2\n        minOutput = out\n      }\n    })\n    // @ts-ignore\n    this.getOutputEdges(minVert).forEach(e => {\n      if (minVert.getNeibour(e) !== minVertNext) return\n      e.canBeUsed = false\n    })\n  }\n\n  // topological sort\n  // if there is a cycle - returns [0, <List of envolved vertices in the cycle>]\n  // if there are no cycles but deadends- returns [3, <List of all envolved deadend vertices>]\n  // if there are no cycles or deadends- returns [2, <List of all envolved vertices topologically sorted>]\n  topologySort(from: Vertice, to: Vertice): [number, Vertice[]] {\n    // undefined or 0 - not processed, 1 - in process, 2 - finished, 3 - dedend\n    const vertState = new Map<Vertice, number>()\n    const vertsFinished: Vertice[] = []\n    const foundCycle: Vertice[] = []\n    const foundDeadEndVerts: Vertice[] = []\n\n    const that = this\n    // 0 - cycle was found and created, return\n    // 1 - during cycle creating\n    // 2 - vertex is processed ok\n    // 3 - dead end vertex\n    function topSortRecursive(current: Vertice): number {\n      const state = vertState.get(current)\n      if (state === 2 || state === 3) return state\n      if (state === 1) {\n        console.assert(foundCycle.length == 0, 'Internal Error 566')\n        foundCycle.push(current)\n        return 1\n      }\n      vertState.set(current, 1)\n\n      let successors2Exist = false\n      const outEdges = that.getOutputEdges(current)\n      for (let i = 0; i < outEdges.length; ++i) {\n        const e = outEdges[i]\n        const res = topSortRecursive(current.getNeibour(e) as Vertice)\n        if (res === 0) return 0\n        if (res === 1) {\n          if (foundCycle[0] === current) return 0\n          else {\n            foundCycle.push(current)\n            return 1\n          }\n        }\n        if (res === 2) successors2Exist = true // Ok successors\n      }\n      if (successors2Exist) {\n        console.assert(current !== to, 'Internal Error 589')\n        vertsFinished.push(current)\n        vertState.set(current, 2)\n        return 2\n      } else {\n        if (current !== to) {\n          foundDeadEndVerts.push(current)\n          vertState.set(current, 3)\n          return 3\n        }\n        vertsFinished.push(current)\n        vertState.set(current, 2)\n        return 2\n      }\n    }\n\n    const res = topSortRecursive(from)\n    if (res === 0) return [0, foundCycle]\n    if (foundDeadEndVerts.length) return [3, foundDeadEndVerts]\n    ASSERT(() => {\n      if (vertsFinished[0] !== to) return false\n      if (vertsFinished[vertsFinished.length - 1] !== from) return false\n      return true\n    }, 'Internal Error 614')\n    if (res === 2) return [2, vertsFinished.reverse()]\n    console.assert(true, 'Internal Error 612')\n    return [1, []]\n  }\n}\n\nexport function findMultiRouting(\n  from: RToken,\n  to: RToken,\n  amountIn: number,\n  pools: Pool[],\n  baseToken: RToken,\n  gasPrice: number,\n  steps: number | number[] = 12\n): MultiRoute {\n  const g = new Graph(pools, baseToken, gasPrice)\n  const fromV = g.tokens.get(from)\n  if (fromV?.price === 0) {\n    g.setPrices(fromV, 1, 0)\n  }\n  const out = g.findBestRoute(from, to, amountIn, steps)\n  return out\n}\n","import { SOLIDITY_TYPE_MAXIMA, SolidityType, ZERO } from '../constants'\n\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n","import { Currency } from './entities/Currency'\nimport { CurrencyAmount } from './entities/CurrencyAmount'\nimport { Percent } from './entities/Percent'\nimport { Token } from './entities/Token'\nimport { Trade } from './entities/Trade'\nimport { TradeType } from './enums/TradeType'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\n  return `0x${currencyAmount.quotient.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(\n    trade: Trade<Currency, Currency, TradeType>,\n    options: TradeOptions | TradeOptionsDeadline\n  ): SwapParameters {\n    const etherIn = trade.inputAmount.currency.isNative\n    const etherOut = trade.outputAmount.currency.isNative\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map((token: Token) => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value\n    }\n  }\n}\n","import { CurrencyAmount, Price, Token } from './entities'\nimport { LAMBDA_URL, STOP_LIMIT_ORDER_ADDRESS } from './constants'\nimport { Message, getSignature, getSignatureWithProvider, getTypeHash, getTypedData } from './entities'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId } from './enums'\nimport { Contract } from '@ethersproject/contracts'\nimport { NonceManager } from '@ethersproject/experimental'\nimport { Signer } from '@ethersproject/abstract-signer'\nimport { Transaction } from '@ethersproject/transactions'\nimport { Web3Provider } from '@ethersproject/providers'\nimport abi from './abis/StopLimitOrder.json'\nimport { defaultAbiCoder } from '@ethersproject/abi'\nimport fetch from 'isomorphic-unfetch'\nimport { keccak256 } from '@ethersproject/solidity'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\nexport interface ILimitOrderData {\n  maker: string\n  tokenIn: string\n  tokenOut: string\n  tokenInDecimals: number\n  tokenOutDecimals: number\n  tokenInSymbol: string\n  tokenOutSymbol: string\n  amountIn: string\n  amountOut: string\n  recipient: string\n  startTime: string | number\n  endTime: string | number\n  stopPrice?: string\n  oracleAddress?: string\n  oracleData?: string\n  v: number\n  r: string\n  s: string\n  chainId: ChainId\n  orderTypeHash?: string\n}\n\nexport class LimitOrder {\n  public readonly maker: string\n  public readonly amountIn: CurrencyAmount<Token>\n  public readonly amountOut: CurrencyAmount<Token>\n  public readonly recipient: string\n  public readonly startTime: string\n  public readonly endTime: string\n  public readonly stopPrice: string\n  public readonly oracleAddress: string\n  public readonly oracleData: string\n  public v: number\n  public r: string\n  public s: string\n\n  static getLimitOrder(data: ILimitOrderData): LimitOrder {\n    return new LimitOrder(\n      data.maker,\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenIn, data.tokenInDecimals, data.tokenInSymbol),\n        data.amountIn\n      ),\n      CurrencyAmount.fromRawAmount(\n        new Token(data.chainId, data.tokenOut, data.tokenOutDecimals, data.tokenOutSymbol),\n        data.amountOut\n      ),\n      data.recipient,\n      data.startTime,\n      data.endTime,\n      data.stopPrice,\n      data.oracleAddress,\n      data.oracleData,\n      data.v,\n      data.r,\n      data.s\n    )\n  }\n\n  constructor(\n    maker: string,\n    amountIn: CurrencyAmount<Token>,\n    amountOut: CurrencyAmount<Token>,\n    recipient: string,\n    startTime: string | number,\n    endTime: string | number,\n    stopPrice = '0',\n    oracleAddress = '0x0000000000000000000000000000000000000000',\n    oracleData = '0x00000000000000000000000000000000000000000000000000000000000000',\n    v = 0,\n    r = '',\n    s = ''\n  ) {\n    this.maker = validateAndParseAddress(maker)\n    this.amountIn = amountIn\n    this.amountOut = amountOut\n    this.recipient = validateAndParseAddress(recipient)\n    this.startTime = startTime.toString()\n    this.endTime = endTime.toString()\n    this.stopPrice = stopPrice\n    this.oracleAddress = validateAndParseAddress(oracleAddress)\n    this.oracleData = oracleData\n    this.v = v\n    this.r = r\n    this.s = s\n  }\n\n  get amountInRaw(): string {\n    return this.amountIn.quotient.toString()\n  }\n\n  get amountOutRaw(): string {\n    return this.amountOut.quotient.toString()\n  }\n\n  get tokenInAddress(): string {\n    return this.amountIn.currency.address\n  }\n\n  get tokenOutAddress(): string {\n    return this.amountOut.currency.address\n  }\n\n  get tokenInDecimals(): number {\n    return this.amountIn.currency.decimals\n  }\n\n  get tokenOutDecimals(): number {\n    return this.amountOut.currency.decimals\n  }\n\n  get tokenInSymbol(): string {\n    return this.amountIn.currency.symbol || ''\n  }\n\n  get tokenOutSymbol(): string {\n    return this.amountOut.currency.symbol || ''\n  }\n\n  get chainId(): ChainId {\n    return this.amountIn.currency.chainId\n  }\n\n  usePrice(price: Price<Token, Token>): LimitOrder {\n    return new LimitOrder(\n      this.maker,\n      this.amountIn,\n      CurrencyAmount.fromRawAmount(this.amountOut.currency, price.quote(this.amountIn).quotient.toString()),\n      this.recipient,\n      this.startTime,\n      this.endTime,\n      this.stopPrice,\n      this.oracleAddress,\n      this.oracleData\n    )\n  }\n\n  signdOrderWithPrivatekey(chainId: ChainId, privateKey: string) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    const { v, r, s } = getSignature(order, chainId, privateKey)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  async signOrderWithProvider(chainId: ChainId, provider: Web3Provider) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    const { v, r, s } = await getSignatureWithProvider(order, chainId, provider)\n\n    this.v = v\n    this.r = r\n    this.s = s\n\n    return { v, r, s }\n  }\n\n  getTypedData() {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256(['bytes'], [this.oracleData])\n    }\n\n    return getTypedData(order, this.chainId)\n  }\n\n  getTypeHash() {\n    let typedData = this.getTypedData()\n    let digest = getTypeHash(typedData)\n    return digest\n  }\n\n  async send() {\n    const resp = await fetch(`${LAMBDA_URL}/orders/create`, {\n      method: 'POST',\n      body: JSON.stringify({\n        maker: this.maker,\n        tokenIn: this.tokenInAddress,\n        tokenOut: this.tokenOutAddress,\n        tokenInDecimals: this.tokenInDecimals,\n        tokenOutDecimals: this.tokenOutDecimals,\n        tokenInSymbol: this.tokenInSymbol,\n        tokenOutSymbol: this.tokenOutSymbol,\n        amountIn: this.amountInRaw,\n        amountOut: this.amountOutRaw,\n        recipient: this.recipient,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        stopPrice: this.stopPrice,\n        oracleAddress: this.oracleAddress,\n        oracleData: this.oracleData,\n        v: this.v,\n        r: this.r,\n        s: this.s,\n        chainId: this.amountIn.currency.chainId\n      })\n    })\n\n    return resp.json()\n  }\n}\n\nexport class FillLimitOrder {\n  public readonly order: LimitOrder\n  public readonly path: string[]\n  public readonly amountExternal: BigNumber\n  public readonly amountToFill: BigNumber\n  public readonly limitOrderReceiver: string\n  public readonly to: string\n  public readonly tokenIn: string\n  public readonly tokenOut: string\n  public readonly limitOrderReceiverData: string\n\n  constructor(\n    order: LimitOrder,\n    path: string[],\n    amountExternal: BigNumber,\n    amountToFill: BigNumber,\n    limitOrderReceiver: string,\n    to: string,\n    keepTokenIn = false\n  ) {\n    this.order = order\n    this.path = path.map(validateAndParseAddress)\n    this.amountExternal = amountExternal\n    this.amountToFill = amountToFill\n    this.limitOrderReceiver = validateAndParseAddress(limitOrderReceiver)\n    this.to = validateAndParseAddress(to)\n    this.tokenIn = order.amountIn.currency.address\n    this.tokenOut = order.amountOut.currency.address\n\n    this.limitOrderReceiverData = defaultAbiCoder.encode(\n      ['address[]', 'uint256', 'address', 'bool'],\n      [this.path, this.amountExternal.toString(), this.to, keepTokenIn]\n    )\n  }\n\n  public fillOrderOpen(\n    signer: Signer,\n    extra: {\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      nonce?: number\n      debug?: boolean\n      open?: boolean\n    }\n  ) {\n    extra.open = true\n    return this.fillOrder(signer, extra)\n  }\n\n  public async fillOrder(\n    signer: Signer | NonceManager,\n    extra: {\n      debug?: boolean\n      forceExecution?: boolean\n      gasPrice?: BigNumber\n      open?: boolean\n      nonce?: number\n    }\n  ): Promise<{ executed: boolean; transaction?: Transaction }> {\n    const { gasPrice, nonce, forceExecution = false, open = false } = extra\n\n    const func = open ? 'fillOrderOpen' : 'fillOrder'\n\n    const orderArg = [\n      this.order.maker,\n      this.order.amountInRaw,\n      this.order.amountOutRaw,\n      this.order.recipient,\n      this.order.startTime,\n      this.order.endTime,\n      this.order.stopPrice,\n      this.order.oracleAddress,\n      this.order.oracleData,\n      this.amountToFill.toString(),\n      this.order.v,\n      this.order.r,\n      this.order.s\n    ]\n\n    const limitOrderContract = new Contract(STOP_LIMIT_ORDER_ADDRESS[this.order.chainId], abi, signer)\n\n    let gasLimit\n    let executed = true\n\n    if (extra.debug) console.log(orderArg, this.path, this.limitOrderReceiver, this.limitOrderReceiverData)\n\n    try {\n      gasLimit = await limitOrderContract.estimateGas[func](\n        orderArg,\n        this.path[0],\n        this.path[this.path.length - 1],\n        this.limitOrderReceiver,\n        this.limitOrderReceiverData\n      )\n      gasLimit = gasLimit.mul(11).div(10)\n    } catch (e) {\n      if (forceExecution) {\n        console.log('Failed to estimate gas, forcing execution')\n        gasLimit = BigNumber.from('400000') // 400k\n        executed = true\n      } else {\n        return { executed: false }\n      }\n    }\n\n    const transaction: Transaction = await limitOrderContract.fillOrder(\n      orderArg,\n      this.path[0],\n      this.path[this.path.length - 1],\n      this.limitOrderReceiver,\n      this.limitOrderReceiverData,\n      { gasLimit, gasPrice, nonce }\n    )\n\n    return { executed, transaction }\n  }\n}\n"],"names":["ChainId","Rounding","TradeType","KashiAction","Fee","OrderStatus","USDC_ADDRESS","MAINNET","ROPSTEN","KOVAN","MATIC","FANTOM","BSC","HARMONY","HECO","OKEX","XDAI","ARBITRUM","FACTORY_ADDRESS","RINKEBY","GÖRLI","FANTOM_TESTNET","MATIC_TESTNET","BSC_TESTNET","ARBITRUM_TESTNET","MOONBEAM_TESTNET","AVALANCHE","AVALANCHE_TESTNET","HECO_TESTNET","HARMONY_TESTNET","OKEX_TESTNET","CELO","PALM","PALM_TESTNET","MOONRIVER","ROUTER_ADDRESS","SUSHI_ADDRESS","MASTERCHEF_ADDRESS","BAR_ADDRESS","MAKER_ADDRESS","TIMELOCK_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","SUSHISWAP_SWAPPER_ADDRESS","SUSHISWAP_MULTISWAPPER_ADDRESS","SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS","PEGGED_ORACLE_ADDRESS","SUSHISWAP_TWAP_0_ORACLE_ADDRESS","SUSHISWAP_TWAP_1_ORACLE_ADDRESS","CHAINLINK_ORACLE_ADDRESS","BORING_HELPER_ADDRESS","STOP_LIMIT_ORDER_ADDRESS","ARCHER_ROUTER_ADDRESS","MINICHEF_ADDRESS","WETH9_ADDRESS","WNATIVE_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","ACTION_ADD_ASSET","ACTION_REPAY","ACTION_REMOVE_ASSET","ACTION_REMOVE_COLLATERAL","ACTION_BORROW","ACTION_GET_REPAY_SHARE","ACTION_GET_REPAY_PART","ACTION_ACCRUE","ACTION_ADD_COLLATERAL","ACTION_UPDATE_EXCHANGE_RATE","ACTION_BENTO_DEPOSIT","ACTION_BENTO_WITHDRAW","ACTION_BENTO_TRANSFER","ACTION_BENTO_TRANSFER_MULTIPLE","ACTION_BENTO_SETAPPROVAL","ACTION_CALL","MINIMUM_TARGET_UTILIZATION","BigNumber","from","MAXIMUM_TARGET_UTILIZATION","UTILIZATION_PRECISION","FULL_UTILIZATION","FULL_UTILIZATION_MINUS_MAX","sub","STARTING_INTEREST_PER_YEAR","mul","MINIMUM_INTEREST_PER_YEAR","MAXIMUM_INTEREST_PER_YEAR","INTEREST_ELASTICITY","FACTOR_PRECISION","PROTOCOL_FEE","PROTOCOL_FEE_DIVISOR","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","Token","equals","other","isToken","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","USDC","WETH9","WNATIVE","Avalanche","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Movr","Okex","xDai","Palm","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","INIT_CODE_HASH","MINIMUM_LIQUIDITY","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","LAMBDA_URL","SOCKET_URL","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","toExact","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePoolInitCodeHash","creationCode","deployData","masterDeployerAddress","keccak256","pack","defaultAbiCoder","encode","MASTER_DEPLOYER_ADDRESS","CONSTANT_PRODUCT_POOL_CREATION_CODE","computeConstantProductPoolAddress","factoryAddress","tokenA","tokenB","fee","twap","token0","token1","sort","CONSTANT_PRODUCT_POOL_INIT_CODE_HASH","getCreate2Address","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","ConstantProductPool","currencyAmountA","currencyAmountB","currencyAmounts","liquidityToken","tokenAmounts","involvesToken","token","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","computePairAddress","Pair","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","i","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","a","b","tradeComparator","ioComp","route","Trade","amount","tradeType","Array","EXACT_INPUT","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","undefined","PoolType","Pool","_info","info","minLiquidity","swapGasCost","type","RConstantProductPool","ConstantProduct","RHybridPool","Hybrid","A","RWeightedPool","Weighted","weight0","weight1","CL_MIN_TICK","CL_MAX_TICK","RConcentratedLiquidityPool","ConcentratedLiquidity","sqrtPrice","nearestTick","ticks","RouteStatus","types","EIP712Domain","LimitOrder","bentoTypes","SetMasterContractApproval","getSignature","message","privateKey","domain","verifyingContract","sign","primaryType","getTypedData","getTypedDataBento","getTypeHash","typedData","getMessage","signingKey","SigningKey","signDigest","v","r","s","getSignatureWithProvider","provider","send","maker","JSON","stringify","signature","splitSignature","getSignatureWithProviderBentobox","user","getSignatureBento","bentoApproval","A_PRECISION","DCacheBN","Map","HybridComputeLiquidity","pool","res","get","r0","r1","isZero","nA","prevD","D","dP","abs","lte","HybridgetY","c","yPrev","y","calcOutByIn","direction","xBN","yBN","parseInt","wPool","weightRatio","actualIn","out","pow","xNewBN","getBigNumber","yNewBN","dy","ConcentratedLiquidityOutByIn","OutOfLiquidity","inAmount","index","unshift","DLiquidity","nextTickToCross","currentPrice","currentLiquidity","outAmount","nextTickPrice","maxDx","maxDy","calcInByOut","lt","round","console","calcPrice","takeFeeIntoAccount","oneMinusFee","hPool","ac4","Ds","calcInputByPriceConstantMean","price","t","calcInputByPrice","priceEffective","hint","revertPositive","ASSERT","f","closeValues","accuracy","calcSquareEquation","assert","sqrtD","min","max","x0","y0","e","valueBN","exp","log","LN2","shift","mant","Edge","p","v0","v1","vert0","vert1","amountInPrevious","amountOutPrevious","canBeUsed","bestEdgeIncome","reserve","calcOutput","gas","GasConsumption","checkMinimalLiquidityExceededAfterSwap","testApply","inPrev","outPrev","to","getNeibour","directionNew","amountInNew","amountOutNew","inInc","outInc","inNew","outNew","calc","applySwap","bestIncome","Vertice","edges","gasPrice","gasSpent","bestTotal","bestSource","checkLine","Graph","pools","baseToken","vertices","tokens","forEach","getOrCreateVertice","edge","baseVert","setPrices","map","r2","vert","exportPath","fromVert","toVert","initValue","Set","edgeStyle","finish","start","label","print","edgeValue","has","arrow","filter","join","n","digits","n0","ceil","LN10","mult","nodeLabel","income","total","nodes","data","fs","require","writeFileSync","findBestPath","processedVert","nextVertList","closestVert","closestTotal","closestPosition","bestPath","totalOutput","v2","newIncome","newGasSpent","newTotal","addPath","_from","totalModule","findBestRoute","mode","routeValues","isArray","sum","gasSpentInit","totalrouted","step","status","NoWay","legs","totalAmountOut","Partial","Success","getRouteLegs","topologyWasChanged","calcLegsAmountOut","cleanTopology","outEdges","getOutputEdges","edgeFrom","quantity","swapPortion","absolutePortion","getInputEdges","amounts","l","find","inputTotal","vertNext","prevAmount","topologySort","removeWeakestEdge","removeDeadEnds","verts","minVert","minVertNext","minOutput","MAX_VALUE","vertState","vertsFinished","foundCycle","foundDeadEndVerts","that","topSortRecursive","current","state","successors2Exist","reverse","findMultiRouting","steps","g","fromV","validateSolidityTypeInstance","solidityType","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","recipient","allowedSlippage","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","startTime","endTime","stopPrice","oracleAddress","oracleData","getLimitOrder","tokenInDecimals","tokenInSymbol","tokenOutDecimals","tokenOutSymbol","usePrice","signdOrderWithPrivatekey","order","tokenInAddress","tokenOutAddress","amountInRaw","amountOutRaw","signOrderWithProvider","digest","fetch","method","body","resp","json","FillLimitOrder","amountExternal","amountToFill","limitOrderReceiver","keepTokenIn","limitOrderReceiverData","fillOrderOpen","signer","extra","open","fillOrder","nonce","forceExecution","func","orderArg","limitOrderContract","Contract","abi","executed","debug","estimateGas","gasLimit","transaction"],"mappings":"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"}